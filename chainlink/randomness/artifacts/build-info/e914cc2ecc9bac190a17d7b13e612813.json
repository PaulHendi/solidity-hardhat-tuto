{"id":"e914cc2ecc9bac190a17d7b13e612813","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"contracts/LinkTokenInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface LinkTokenInterface {\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\n\n  function approve(address spender, uint256 value) external returns (bool success);\n\n  function balanceOf(address owner) external view returns (uint256 balance);\n\n  function decimals() external view returns (uint8 decimalPlaces);\n\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\n\n  function increaseApproval(address spender, uint256 subtractedValue) external;\n\n  function name() external view returns (string memory tokenName);\n\n  function symbol() external view returns (string memory tokenSymbol);\n\n  function totalSupply() external view returns (uint256 totalTokensIssued);\n\n  function transfer(address to, uint256 value) external returns (bool success);\n\n  function transferAndCall(\n    address to,\n    uint256 value,\n    bytes calldata data\n  ) external returns (bool success);\n\n  function transferFrom(\n    address from,\n    address to,\n    uint256 value\n  ) external returns (bool success);\n}\n"},"contracts/randomness.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport \"./VRFConsumerBase.sol\";\n\ncontract RandomNumber is VRFConsumerBase {\n    bytes32 internal keyHash;\n    uint256 internal fee;\n    \n    uint256 public randomResult;\n    \n    /**\n     * Constructor inherits VRFConsumerBase\n     * \n     * Network: Polygon (Matic) Mumbai Testnet\n     * Chainlink VRF Coordinator address: 0x8C7382F9D8f56b33781fE506E897a4F1e2d17255\n     * LINK token address:                0x326C977E6efc84E512bB9C30f76E30c160eD06FB\n     * Key Hash: 0x6e75b569a01ef56d18cab6a8e71e6600d6ce853834d4a5748b720d06f878b3a4\n     */\n    constructor() \n        VRFConsumerBase  (\n            0x8C7382F9D8f56b33781fE506E897a4F1e2d17255, // VRF Coordinator\n            0x326C977E6efc84E512bB9C30f76E30c160eD06FB  // LINK Token\n        ) \n    {\n        keyHash = 0x6e75b569a01ef56d18cab6a8e71e6600d6ce853834d4a5748b720d06f878b3a4;\n        fee = 0.0001 * 10 ** 18; // 0.0001 LINK\n    }\n    \n    /** \n     * Requests randomness \n     */\n    function getRandomNumber() public returns (bytes32 requestId) {\n        require(LINK.balanceOf(address(this)) > fee, \"Not enough LINK - fill contract with faucet\");\n        return requestRandomness(keyHash, fee);\n    }\n\n    /**\n     * Callback function used by VRF Coordinator\n     */\n    function fulfillRandomness(bytes32 requestId, uint256 randomness) internal override {\n        randomResult = (randomness%10);\n    }\n}"},"contracts/VRFConsumerBase.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./LinkTokenInterface.sol\";\n\nimport \"./VRFRequestIDBase.sol\";\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator, _link) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash), and have told you the minimum LINK\n * @dev price for VRF service. Make sure your contract has sufficient LINK, and\n * @dev call requestRandomness(keyHash, fee, seed), where seed is the input you\n * @dev want to generate randomness from.\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomness method.\n *\n * @dev The randomness argument to fulfillRandomness is the actual random value\n * @dev generated from your seed.\n *\n * @dev The requestId argument is generated from the keyHash and the seed by\n * @dev makeRequestId(keyHash, seed). If your contract could have concurrent\n * @dev requests open, you can use the requestId to track which seed is\n * @dev associated with which randomness. See VRFRequestIDBase.sol for more\n * @dev details. (See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.)\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ. (Which is critical to making unpredictable randomness! See the\n * @dev next section.)\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the ultimate input to the VRF is mixed with the block hash of the\n * @dev block in which the request is made, user-provided seeds have no impact\n * @dev on its economic security properties. They are only included for API\n * @dev compatability with previous versions of this contract.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request.\n */\nabstract contract VRFConsumerBase is VRFRequestIDBase {\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBase expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomness the VRF output\n   */\n  function fulfillRandomness(bytes32 requestId, uint256 randomness) internal virtual;\n\n  /**\n   * @dev In order to keep backwards compatibility we have kept the user\n   * seed field around. We remove the use of it because given that the blockhash\n   * enters later, it overrides whatever randomness the used seed provides.\n   * Given that it adds no security, and can easily lead to misunderstandings,\n   * we have removed it from usage and can now provide a simpler API.\n   */\n  uint256 private constant USER_SEED_PLACEHOLDER = 0;\n\n  /**\n   * @notice requestRandomness initiates a request for VRF output given _seed\n   *\n   * @dev The fulfillRandomness method receives the output, once it's provided\n   * @dev by the Oracle, and verified by the vrfCoordinator.\n   *\n   * @dev The _keyHash must already be registered with the VRFCoordinator, and\n   * @dev the _fee must exceed the fee specified during registration of the\n   * @dev _keyHash.\n   *\n   * @dev The _seed parameter is vestigial, and is kept only for API\n   * @dev compatibility with older versions. It can't *hurt* to mix in some of\n   * @dev your own randomness, here, but it's not necessary because the VRF\n   * @dev oracle will mix the hash of the block containing your request into the\n   * @dev VRF seed it ultimately uses.\n   *\n   * @param _keyHash ID of public key against which randomness is generated\n   * @param _fee The amount of LINK to send with the request\n   *\n   * @return requestId unique ID for this request\n   *\n   * @dev The returned requestId can be used to distinguish responses to\n   * @dev concurrent requests. It is passed as the first argument to\n   * @dev fulfillRandomness.\n   */\n  function requestRandomness(bytes32 _keyHash, uint256 _fee) internal returns (bytes32 requestId) {\n    LINK.transferAndCall(vrfCoordinator, _fee, abi.encode(_keyHash, USER_SEED_PLACEHOLDER));\n    // This is the seed passed to VRFCoordinator. The oracle will mix this with\n    // the hash of the block containing this request to obtain the seed/input\n    // which is finally passed to the VRF cryptographic machinery.\n    uint256 vRFSeed = makeVRFInputSeed(_keyHash, USER_SEED_PLACEHOLDER, address(this), nonces[_keyHash]);\n    // nonces[_keyHash] must stay in sync with\n    // VRFCoordinator.nonces[_keyHash][this], which was incremented by the above\n    // successful LINK.transferAndCall (in VRFCoordinator.randomnessRequest).\n    // This provides protection against the user repeating their input seed,\n    // which would result in a predictable/duplicate output, if multiple such\n    // requests appeared in the same block.\n    nonces[_keyHash] = nonces[_keyHash] + 1;\n    return makeRequestId(_keyHash, vRFSeed);\n  }\n\n  LinkTokenInterface internal immutable LINK;\n  address private immutable vrfCoordinator;\n\n  // Nonces for each VRF key from which randomness has been requested.\n  //\n  // Must stay in sync with VRFCoordinator[_keyHash][this]\n  mapping(bytes32 => uint256) /* keyHash */ /* nonce */\n    private nonces;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   * @param _link address of LINK token contract\n   *\n   * @dev https://docs.chain.link/docs/link-token-contracts\n   */\n  constructor(address _vrfCoordinator, address _link) {\n    vrfCoordinator = _vrfCoordinator;\n    LINK = LinkTokenInterface(_link);\n  }\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomness(bytes32 requestId, uint256 randomness) external {\n    require(msg.sender == vrfCoordinator, \"Only VRFCoordinator can fulfill\");\n    fulfillRandomness(requestId, randomness);\n  }\n}\n"},"contracts/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"contracts/VRFRequestIDBase.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract VRFRequestIDBase {\n  /**\n   * @notice returns the seed which is actually input to the VRF coordinator\n   *\n   * @dev To prevent repetition of VRF output due to repetition of the\n   * @dev user-supplied seed, that seed is combined in a hash with the\n   * @dev user-specific nonce, and the address of the consuming contract. The\n   * @dev risk of repetition is mostly mitigated by inclusion of a blockhash in\n   * @dev the final seed, but the nonce does protect against repetition in\n   * @dev requests which are included in a single block.\n   *\n   * @param _userSeed VRF seed input provided by user\n   * @param _requester Address of the requesting contract\n   * @param _nonce User-specific nonce at the time of the request\n   */\n  function makeVRFInputSeed(\n    bytes32 _keyHash,\n    uint256 _userSeed,\n    address _requester,\n    uint256 _nonce\n  ) internal pure returns (uint256) {\n    return uint256(keccak256(abi.encode(_keyHash, _userSeed, _requester, _nonce)));\n  }\n\n  /**\n   * @notice Returns the id for this request\n   * @param _keyHash The serviceAgreement ID to be used for this request\n   * @param _vRFInputSeed The seed to be passed directly to the VRF\n   * @return The id for this request\n   *\n   * @dev Note that _vRFInputSeed is not the seed passed by the consuming\n   * @dev contract, but the one generated by makeVRFInputSeed\n   */\n  function makeRequestId(bytes32 _keyHash, uint256 _vRFInputSeed) internal pure returns (bytes32) {\n    return keccak256(abi.encodePacked(_keyHash, _vRFInputSeed));\n  }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/randomness.sol:41:32:\n   |\n41 |     function fulfillRandomness(bytes32 requestId, uint256 randomness) internal override {\n   |                                ^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":1336,"file":"contracts/randomness.sol","start":1319},"type":"Warning"}],"sources":{"contracts/LinkTokenInterface.sol":{"ast":{"absolutePath":"contracts/LinkTokenInterface.sol","exportedSymbols":{"LinkTokenInterface":[94]},"id":95,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"LinkTokenInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":94,"linearizedBaseContracts":[94],"name":"LinkTokenInterface","nameLocation":"67:18:0","nodeType":"ContractDefinition","nodes":[{"functionSelector":"dd62ed3e","id":10,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"99:9:0","nodeType":"FunctionDefinition","parameters":{"id":6,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3,"mutability":"mutable","name":"owner","nameLocation":"117:5:0","nodeType":"VariableDeclaration","scope":10,"src":"109:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2,"name":"address","nodeType":"ElementaryTypeName","src":"109:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5,"mutability":"mutable","name":"spender","nameLocation":"132:7:0","nodeType":"VariableDeclaration","scope":10,"src":"124:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"124:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"108:32:0"},"returnParameters":{"id":9,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"mutability":"mutable","name":"remaining","nameLocation":"172:9:0","nodeType":"VariableDeclaration","scope":10,"src":"164:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7,"name":"uint256","nodeType":"ElementaryTypeName","src":"164:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"163:19:0"},"scope":94,"src":"90:93:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":19,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"196:7:0","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"mutability":"mutable","name":"spender","nameLocation":"212:7:0","nodeType":"VariableDeclaration","scope":19,"src":"204:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"204:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14,"mutability":"mutable","name":"value","nameLocation":"229:5:0","nodeType":"VariableDeclaration","scope":19,"src":"221:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"221:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"203:32:0"},"returnParameters":{"id":18,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17,"mutability":"mutable","name":"success","nameLocation":"259:7:0","nodeType":"VariableDeclaration","scope":19,"src":"254:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"254:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"253:14:0"},"scope":94,"src":"187:81:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":26,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"281:9:0","nodeType":"FunctionDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"owner","nameLocation":"299:5:0","nodeType":"VariableDeclaration","scope":26,"src":"291:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20,"name":"address","nodeType":"ElementaryTypeName","src":"291:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"290:15:0"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"balance","nameLocation":"337:7:0","nodeType":"VariableDeclaration","scope":26,"src":"329:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23,"name":"uint256","nodeType":"ElementaryTypeName","src":"329:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"328:17:0"},"scope":94,"src":"272:74:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":31,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"359:8:0","nodeType":"FunctionDefinition","parameters":{"id":27,"nodeType":"ParameterList","parameters":[],"src":"367:2:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"decimalPlaces","nameLocation":"399:13:0","nodeType":"VariableDeclaration","scope":31,"src":"393:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":28,"name":"uint8","nodeType":"ElementaryTypeName","src":"393:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"392:21:0"},"scope":94,"src":"350:64:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"66188463","id":40,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseApproval","nameLocation":"427:16:0","nodeType":"FunctionDefinition","parameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"spender","nameLocation":"452:7:0","nodeType":"VariableDeclaration","scope":40,"src":"444:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"444:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35,"mutability":"mutable","name":"addedValue","nameLocation":"469:10:0","nodeType":"VariableDeclaration","scope":40,"src":"461:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34,"name":"uint256","nodeType":"ElementaryTypeName","src":"461:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"443:37:0"},"returnParameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"success","nameLocation":"504:7:0","nodeType":"VariableDeclaration","scope":40,"src":"499:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":37,"name":"bool","nodeType":"ElementaryTypeName","src":"499:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"498:14:0"},"scope":94,"src":"418:95:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d73dd623","id":47,"implemented":false,"kind":"function","modifiers":[],"name":"increaseApproval","nameLocation":"526:16:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"spender","nameLocation":"551:7:0","nodeType":"VariableDeclaration","scope":47,"src":"543:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41,"name":"address","nodeType":"ElementaryTypeName","src":"543:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":44,"mutability":"mutable","name":"subtractedValue","nameLocation":"568:15:0","nodeType":"VariableDeclaration","scope":47,"src":"560:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":43,"name":"uint256","nodeType":"ElementaryTypeName","src":"560:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"542:42:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[],"src":"593:0:0"},"scope":94,"src":"517:77:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"06fdde03","id":52,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"607:4:0","nodeType":"FunctionDefinition","parameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"611:2:0"},"returnParameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"tokenName","nameLocation":"651:9:0","nodeType":"VariableDeclaration","scope":52,"src":"637:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":49,"name":"string","nodeType":"ElementaryTypeName","src":"637:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"636:25:0"},"scope":94,"src":"598:64:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":57,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"675:6:0","nodeType":"FunctionDefinition","parameters":{"id":53,"nodeType":"ParameterList","parameters":[],"src":"681:2:0"},"returnParameters":{"id":56,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"mutability":"mutable","name":"tokenSymbol","nameLocation":"721:11:0","nodeType":"VariableDeclaration","scope":57,"src":"707:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":54,"name":"string","nodeType":"ElementaryTypeName","src":"707:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"706:27:0"},"scope":94,"src":"666:68:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":62,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"747:11:0","nodeType":"FunctionDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[],"src":"758:2:0"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60,"mutability":"mutable","name":"totalTokensIssued","nameLocation":"792:17:0","nodeType":"VariableDeclaration","scope":62,"src":"784:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59,"name":"uint256","nodeType":"ElementaryTypeName","src":"784:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"783:27:0"},"scope":94,"src":"738:73:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":71,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"824:8:0","nodeType":"FunctionDefinition","parameters":{"id":67,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"to","nameLocation":"841:2:0","nodeType":"VariableDeclaration","scope":71,"src":"833:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"833:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":66,"mutability":"mutable","name":"value","nameLocation":"853:5:0","nodeType":"VariableDeclaration","scope":71,"src":"845:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65,"name":"uint256","nodeType":"ElementaryTypeName","src":"845:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"832:27:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"success","nameLocation":"883:7:0","nodeType":"VariableDeclaration","scope":71,"src":"878:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":68,"name":"bool","nodeType":"ElementaryTypeName","src":"878:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"877:14:0"},"scope":94,"src":"815:77:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4000aea0","id":82,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"905:15:0","nodeType":"FunctionDefinition","parameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"to","nameLocation":"934:2:0","nodeType":"VariableDeclaration","scope":82,"src":"926:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":72,"name":"address","nodeType":"ElementaryTypeName","src":"926:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":75,"mutability":"mutable","name":"value","nameLocation":"950:5:0","nodeType":"VariableDeclaration","scope":82,"src":"942:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":74,"name":"uint256","nodeType":"ElementaryTypeName","src":"942:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"data","nameLocation":"976:4:0","nodeType":"VariableDeclaration","scope":82,"src":"961:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":76,"name":"bytes","nodeType":"ElementaryTypeName","src":"961:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"920:64:0"},"returnParameters":{"id":81,"nodeType":"ParameterList","parameters":[{"constant":false,"id":80,"mutability":"mutable","name":"success","nameLocation":"1008:7:0","nodeType":"VariableDeclaration","scope":82,"src":"1003:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":79,"name":"bool","nodeType":"ElementaryTypeName","src":"1003:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1002:14:0"},"scope":94,"src":"896:121:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":93,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1030:12:0","nodeType":"FunctionDefinition","parameters":{"id":89,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"mutability":"mutable","name":"from","nameLocation":"1056:4:0","nodeType":"VariableDeclaration","scope":93,"src":"1048:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":83,"name":"address","nodeType":"ElementaryTypeName","src":"1048:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":86,"mutability":"mutable","name":"to","nameLocation":"1074:2:0","nodeType":"VariableDeclaration","scope":93,"src":"1066:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"1066:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":88,"mutability":"mutable","name":"value","nameLocation":"1090:5:0","nodeType":"VariableDeclaration","scope":93,"src":"1082:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":87,"name":"uint256","nodeType":"ElementaryTypeName","src":"1082:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:57:0"},"returnParameters":{"id":92,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"success","nameLocation":"1123:7:0","nodeType":"VariableDeclaration","scope":93,"src":"1118:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":90,"name":"bool","nodeType":"ElementaryTypeName","src":"1118:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1117:14:0"},"scope":94,"src":"1021:111:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":95,"src":"57:1077:0","usedErrors":[]}],"src":"32:1103:0"},"id":0},"contracts/VRFConsumerBase.sol":{"ast":{"absolutePath":"contracts/VRFConsumerBase.sol","exportedSymbols":{"LinkTokenInterface":[94],"VRFConsumerBase":[215],"VRFRequestIDBase":[323]},"id":216,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":96,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"absolutePath":"contracts/LinkTokenInterface.sol","file":"./LinkTokenInterface.sol","id":97,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":216,"sourceUnit":95,"src":"57:34:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/VRFRequestIDBase.sol","file":"./VRFRequestIDBase.sol","id":98,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":216,"sourceUnit":324,"src":"93:32:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":100,"name":"VRFRequestIDBase","nameLocations":["5386:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":323,"src":"5386:16:1"},"id":101,"nodeType":"InheritanceSpecifier","src":"5386:16:1"}],"canonicalName":"VRFConsumerBase","contractDependencies":[],"contractKind":"contract","documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"127:5221:1","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator, _link) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash), and have told you the minimum LINK\n @dev price for VRF service. Make sure your contract has sufficient LINK, and\n @dev call requestRandomness(keyHash, fee, seed), where seed is the input you\n @dev want to generate randomness from.\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomness method.\n @dev The randomness argument to fulfillRandomness is the actual random value\n @dev generated from your seed.\n @dev The requestId argument is generated from the keyHash and the seed by\n @dev makeRequestId(keyHash, seed). If your contract could have concurrent\n @dev requests open, you can use the requestId to track which seed is\n @dev associated with which randomness. See VRFRequestIDBase.sol for more\n @dev details. (See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.)\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ. (Which is critical to making unpredictable randomness! See the\n @dev next section.)\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the ultimate input to the VRF is mixed with the block hash of the\n @dev block in which the request is made, user-provided seeds have no impact\n @dev on its economic security properties. They are only included for API\n @dev compatability with previous versions of this contract.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request."},"fullyImplemented":false,"id":215,"linearizedBaseContracts":[215,323],"name":"VRFConsumerBase","nameLocation":"5367:15:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":102,"nodeType":"StructuredDocumentation","src":"5407:641:1","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBase expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomness the VRF output"},"id":109,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomness","nameLocation":"6060:17:1","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"requestId","nameLocation":"6086:9:1","nodeType":"VariableDeclaration","scope":109,"src":"6078:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6078:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":106,"mutability":"mutable","name":"randomness","nameLocation":"6105:10:1","nodeType":"VariableDeclaration","scope":109,"src":"6097:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":105,"name":"uint256","nodeType":"ElementaryTypeName","src":"6097:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6077:39:1"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"6133:0:1"},"scope":215,"src":"6051:83:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":true,"documentation":{"id":110,"nodeType":"StructuredDocumentation","src":"6138:388:1","text":" @dev In order to keep backwards compatibility we have kept the user\n seed field around. We remove the use of it because given that the blockhash\n enters later, it overrides whatever randomness the used seed provides.\n Given that it adds no security, and can easily lead to misunderstandings,\n we have removed it from usage and can now provide a simpler API."},"id":113,"mutability":"constant","name":"USER_SEED_PLACEHOLDER","nameLocation":"6554:21:1","nodeType":"VariableDeclaration","scope":215,"src":"6529:50:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":111,"name":"uint256","nodeType":"ElementaryTypeName","src":"6529:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6578:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"private"},{"body":{"id":164,"nodeType":"Block","src":"7817:924:1","statements":[{"expression":{"arguments":[{"id":126,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"7844:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":127,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"7860:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":130,"name":"_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"7877:8:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":131,"name":"USER_SEED_PLACEHOLDER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"7887:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":128,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7866:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7870:6:1","memberName":"encode","nodeType":"MemberAccess","src":"7866:10:1","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7866:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":123,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"7823:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$94","typeString":"contract LinkTokenInterface"}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7828:15:1","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":82,"src":"7823:20:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7823:87:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":134,"nodeType":"ExpressionStatement","src":"7823:87:1"},{"assignments":[136],"declarations":[{"constant":false,"id":136,"mutability":"mutable","name":"vRFSeed","nameLocation":"8149:7:1","nodeType":"VariableDeclaration","scope":164,"src":"8141:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":135,"name":"uint256","nodeType":"ElementaryTypeName","src":"8141:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":148,"initialValue":{"arguments":[{"id":138,"name":"_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"8176:8:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":139,"name":"USER_SEED_PLACEHOLDER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"8186:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":142,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8217:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBase_$215","typeString":"contract VRFConsumerBase"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VRFConsumerBase_$215","typeString":"contract VRFConsumerBase"}],"id":141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8209:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":140,"name":"address","nodeType":"ElementaryTypeName","src":"8209:7:1","typeDescriptions":{}}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8209:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":144,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"8224:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":146,"indexExpression":{"id":145,"name":"_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"8231:8:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8224:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":137,"name":"makeVRFInputSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"8159:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bytes32,uint256,address,uint256) pure returns (uint256)"}},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8159:82:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8141:100:1"},{"expression":{"id":157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":149,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"8652:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":151,"indexExpression":{"id":150,"name":"_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"8659:8:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8652:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":152,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"8671:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":154,"indexExpression":{"id":153,"name":"_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"8678:8:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8671:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8690:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8671:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8652:39:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":158,"nodeType":"ExpressionStatement","src":"8652:39:1"},{"expression":{"arguments":[{"id":160,"name":"_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"8718:8:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":161,"name":"vRFSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"8728:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":159,"name":"makeRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"8704:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8704:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":122,"id":163,"nodeType":"Return","src":"8697:39:1"}]},"documentation":{"id":114,"nodeType":"StructuredDocumentation","src":"6584:1134:1","text":" @notice requestRandomness initiates a request for VRF output given _seed\n @dev The fulfillRandomness method receives the output, once it's provided\n @dev by the Oracle, and verified by the vrfCoordinator.\n @dev The _keyHash must already be registered with the VRFCoordinator, and\n @dev the _fee must exceed the fee specified during registration of the\n @dev _keyHash.\n @dev The _seed parameter is vestigial, and is kept only for API\n @dev compatibility with older versions. It can't *hurt* to mix in some of\n @dev your own randomness, here, but it's not necessary because the VRF\n @dev oracle will mix the hash of the block containing your request into the\n @dev VRF seed it ultimately uses.\n @param _keyHash ID of public key against which randomness is generated\n @param _fee The amount of LINK to send with the request\n @return requestId unique ID for this request\n @dev The returned requestId can be used to distinguish responses to\n @dev concurrent requests. It is passed as the first argument to\n @dev fulfillRandomness."},"id":165,"implemented":true,"kind":"function","modifiers":[],"name":"requestRandomness","nameLocation":"7730:17:1","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":116,"mutability":"mutable","name":"_keyHash","nameLocation":"7756:8:1","nodeType":"VariableDeclaration","scope":165,"src":"7748:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":115,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7748:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":118,"mutability":"mutable","name":"_fee","nameLocation":"7774:4:1","nodeType":"VariableDeclaration","scope":165,"src":"7766:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":117,"name":"uint256","nodeType":"ElementaryTypeName","src":"7766:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7747:32:1"},"returnParameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"requestId","nameLocation":"7806:9:1","nodeType":"VariableDeclaration","scope":165,"src":"7798:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7798:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7797:19:1"},"scope":215,"src":"7721:1020:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"id":168,"mutability":"immutable","name":"LINK","nameLocation":"8783:4:1","nodeType":"VariableDeclaration","scope":215,"src":"8745:42:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$94","typeString":"contract LinkTokenInterface"},"typeName":{"id":167,"nodeType":"UserDefinedTypeName","pathNode":{"id":166,"name":"LinkTokenInterface","nameLocations":["8745:18:1"],"nodeType":"IdentifierPath","referencedDeclaration":94,"src":"8745:18:1"},"referencedDeclaration":94,"src":"8745:18:1","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$94","typeString":"contract LinkTokenInterface"}},"visibility":"internal"},{"constant":false,"id":170,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"8817:14:1","nodeType":"VariableDeclaration","scope":215,"src":"8791:40:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"8791:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":174,"mutability":"mutable","name":"nonces","nameLocation":"9037:6:1","nodeType":"VariableDeclaration","scope":215,"src":"8971:72:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":173,"keyType":{"id":171,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8979:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"8971:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"8990:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":192,"nodeType":"Block","src":"9289:81:1","statements":[{"expression":{"id":184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":182,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"9295:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":183,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"9312:15:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9295:32:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":185,"nodeType":"ExpressionStatement","src":"9295:32:1"},{"expression":{"id":190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":186,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"9333:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$94","typeString":"contract LinkTokenInterface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":188,"name":"_link","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"9359:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"LinkTokenInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"9340:18:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinkTokenInterface_$94_$","typeString":"type(contract LinkTokenInterface)"}},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9340:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$94","typeString":"contract LinkTokenInterface"}},"src":"9333:32:1","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$94","typeString":"contract LinkTokenInterface"}},"id":191,"nodeType":"ExpressionStatement","src":"9333:32:1"}]},"documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"9048:186:1","text":" @param _vrfCoordinator address of VRFCoordinator contract\n @param _link address of LINK token contract\n @dev https://docs.chain.link/docs/link-token-contracts"},"id":193,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"9257:15:1","nodeType":"VariableDeclaration","scope":193,"src":"9249:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"9249:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":179,"mutability":"mutable","name":"_link","nameLocation":"9282:5:1","nodeType":"VariableDeclaration","scope":193,"src":"9274:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":178,"name":"address","nodeType":"ElementaryTypeName","src":"9274:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9248:40:1"},"returnParameters":{"id":181,"nodeType":"ParameterList","parameters":[],"src":"9289:0:1"},"scope":215,"src":"9237:133:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":213,"nodeType":"Block","src":"9643:129:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":201,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9657:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9661:6:1","memberName":"sender","nodeType":"MemberAccess","src":"9657:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":203,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"9671:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9657:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c","id":205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9687:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445","typeString":"literal_string \"Only VRFCoordinator can fulfill\""},"value":"Only VRFCoordinator can fulfill"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445","typeString":"literal_string \"Only VRFCoordinator can fulfill\""}],"id":200,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9649:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9649:72:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"9649:72:1"},{"expression":{"arguments":[{"id":209,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"9745:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":210,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"9756:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":208,"name":"fulfillRandomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"9727:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256)"}},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9727:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":212,"nodeType":"ExpressionStatement","src":"9727:40:1"}]},"functionSelector":"94985ddd","id":214,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomness","nameLocation":"9574:20:1","nodeType":"FunctionDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"requestId","nameLocation":"9603:9:1","nodeType":"VariableDeclaration","scope":214,"src":"9595:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9595:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"randomness","nameLocation":"9622:10:1","nodeType":"VariableDeclaration","scope":214,"src":"9614:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint256","nodeType":"ElementaryTypeName","src":"9614:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9594:39:1"},"returnParameters":{"id":199,"nodeType":"ParameterList","parameters":[],"src":"9643:0:1"},"scope":215,"src":"9565:207:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":216,"src":"5349:4425:1","usedErrors":[]}],"src":"32:9743:1"},"id":1},"contracts/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"contracts/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[273]},"id":274,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":217,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:2"},{"abstract":true,"baseContracts":[],"canonicalName":"VRFConsumerBaseV2","contractDependencies":[],"contractKind":"contract","documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"57:5275:2","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":273,"linearizedBaseContracts":[273],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:2","nodeType":"ContractDefinition","nodes":[{"errorSelector":"1cf993f4","id":224,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:2","nodeType":"ErrorDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"have","nameLocation":"5413:4:2","nodeType":"VariableDeclaration","scope":224,"src":"5405:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":219,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"want","nameLocation":"5427:4:2","nodeType":"VariableDeclaration","scope":224,"src":"5419:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:2"},"src":"5373:60:2"},{"constant":false,"id":226,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5462:14:2","nodeType":"VariableDeclaration","scope":273,"src":"5436:40:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":225,"name":"address","nodeType":"ElementaryTypeName","src":"5436:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":236,"nodeType":"Block","src":"5593:43:2","statements":[{"expression":{"id":234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":232,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"5599:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":233,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5616:15:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5599:32:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":235,"nodeType":"ExpressionStatement","src":"5599:32:2"}]},"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"5481:72:2","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":237,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5576:15:2","nodeType":"VariableDeclaration","scope":237,"src":"5568:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"5568:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5567:25:2"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[],"src":"5593:0:2"},"scope":273,"src":"5556:80:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"5640:686:2","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":246,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6338:18:2","nodeType":"FunctionDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"requestId","nameLocation":"6365:9:2","nodeType":"VariableDeclaration","scope":246,"src":"6357:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":239,"name":"uint256","nodeType":"ElementaryTypeName","src":"6357:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"randomWords","nameLocation":"6393:11:2","nodeType":"VariableDeclaration","scope":246,"src":"6376:28:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"6376:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":242,"nodeType":"ArrayTypeName","src":"6376:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6356:49:2"},"returnParameters":{"id":245,"nodeType":"ParameterList","parameters":[],"src":"6422:0:2"},"scope":273,"src":"6329:94:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":271,"nodeType":"Block","src":"6707:167:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":254,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6717:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6721:6:2","memberName":"sender","nodeType":"MemberAccess","src":"6717:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":256,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"6731:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6717:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":265,"nodeType":"IfStatement","src":"6713:109:2","trueBody":{"id":264,"nodeType":"Block","src":"6747:75:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":259,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6788:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6792:6:2","memberName":"sender","nodeType":"MemberAccess","src":"6788:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":261,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"6800:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":258,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"6762:25:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6762:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":263,"nodeType":"RevertStatement","src":"6755:60:2"}]}},{"expression":{"arguments":[{"id":267,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"6846:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":268,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"6857:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":266,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"6827:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6827:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":270,"nodeType":"ExpressionStatement","src":"6827:42:2"}]},"functionSelector":"1fe543e3","id":272,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6627:21:2","nodeType":"FunctionDefinition","parameters":{"id":252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"mutability":"mutable","name":"requestId","nameLocation":"6657:9:2","nodeType":"VariableDeclaration","scope":272,"src":"6649:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"6649:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":251,"mutability":"mutable","name":"randomWords","nameLocation":"6685:11:2","nodeType":"VariableDeclaration","scope":272,"src":"6668:28:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":249,"name":"uint256","nodeType":"ElementaryTypeName","src":"6668:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":250,"nodeType":"ArrayTypeName","src":"6668:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6648:49:2"},"returnParameters":{"id":253,"nodeType":"ParameterList","parameters":[],"src":"6707:0:2"},"scope":273,"src":"6618:256:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":274,"src":"5333:1543:2","usedErrors":[224]}],"src":"32:6845:2"},"id":2},"contracts/VRFRequestIDBase.sol":{"ast":{"absolutePath":"contracts/VRFRequestIDBase.sol","exportedSymbols":{"VRFRequestIDBase":[323]},"id":324,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":275,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"VRFRequestIDBase","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":323,"linearizedBaseContracts":[323],"name":"VRFRequestIDBase","nameLocation":"66:16:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":302,"nodeType":"Block","src":"947:89:3","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":294,"name":"_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"989:8:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":295,"name":"_userSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"999:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":296,"name":"_requester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"1010:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":297,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1022:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":292,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"978:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"982:6:3","memberName":"encode","nodeType":"MemberAccess","src":"978:10:3","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"978:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":291,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"968:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"968:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"960:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"960:7:3","typeDescriptions":{}}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"960:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":288,"id":301,"nodeType":"Return","src":"953:78:3"}]},"documentation":{"id":276,"nodeType":"StructuredDocumentation","src":"87:706:3","text":" @notice returns the seed which is actually input to the VRF coordinator\n @dev To prevent repetition of VRF output due to repetition of the\n @dev user-supplied seed, that seed is combined in a hash with the\n @dev user-specific nonce, and the address of the consuming contract. The\n @dev risk of repetition is mostly mitigated by inclusion of a blockhash in\n @dev the final seed, but the nonce does protect against repetition in\n @dev requests which are included in a single block.\n @param _userSeed VRF seed input provided by user\n @param _requester Address of the requesting contract\n @param _nonce User-specific nonce at the time of the request"},"id":303,"implemented":true,"kind":"function","modifiers":[],"name":"makeVRFInputSeed","nameLocation":"805:16:3","nodeType":"FunctionDefinition","parameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"mutability":"mutable","name":"_keyHash","nameLocation":"835:8:3","nodeType":"VariableDeclaration","scope":303,"src":"827:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"827:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":280,"mutability":"mutable","name":"_userSeed","nameLocation":"857:9:3","nodeType":"VariableDeclaration","scope":303,"src":"849:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":279,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":282,"mutability":"mutable","name":"_requester","nameLocation":"880:10:3","nodeType":"VariableDeclaration","scope":303,"src":"872:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"_nonce","nameLocation":"904:6:3","nodeType":"VariableDeclaration","scope":303,"src":"896:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":283,"name":"uint256","nodeType":"ElementaryTypeName","src":"896:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:93:3"},"returnParameters":{"id":288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":303,"src":"938:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":286,"name":"uint256","nodeType":"ElementaryTypeName","src":"938:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"937:9:3"},"scope":323,"src":"796:240:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":321,"nodeType":"Block","src":"1512:70:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":316,"name":"_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"1552:8:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":317,"name":"_vRFInputSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"1562:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":314,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1535:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1539:12:3","memberName":"encodePacked","nodeType":"MemberAccess","src":"1535:16:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1535:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":313,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1525:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1525:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":312,"id":320,"nodeType":"Return","src":"1518:59:3"}]},"documentation":{"id":304,"nodeType":"StructuredDocumentation","src":"1040:373:3","text":" @notice Returns the id for this request\n @param _keyHash The serviceAgreement ID to be used for this request\n @param _vRFInputSeed The seed to be passed directly to the VRF\n @return The id for this request\n @dev Note that _vRFInputSeed is not the seed passed by the consuming\n @dev contract, but the one generated by makeVRFInputSeed"},"id":322,"implemented":true,"kind":"function","modifiers":[],"name":"makeRequestId","nameLocation":"1425:13:3","nodeType":"FunctionDefinition","parameters":{"id":309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"mutability":"mutable","name":"_keyHash","nameLocation":"1447:8:3","nodeType":"VariableDeclaration","scope":322,"src":"1439:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":305,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1439:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":308,"mutability":"mutable","name":"_vRFInputSeed","nameLocation":"1465:13:3","nodeType":"VariableDeclaration","scope":322,"src":"1457:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":307,"name":"uint256","nodeType":"ElementaryTypeName","src":"1457:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1438:41:3"},"returnParameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":322,"src":"1503:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1503:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1502:9:3"},"scope":323,"src":"1416:166:3","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":324,"src":"57:1527:3","usedErrors":[]}],"src":"32:1553:3"},"id":3},"contracts/randomness.sol":{"ast":{"absolutePath":"contracts/randomness.sol","exportedSymbols":{"LinkTokenInterface":[94],"RandomNumber":[398],"VRFConsumerBase":[215],"VRFRequestIDBase":[323]},"id":399,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":325,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:4"},{"absolutePath":"contracts/VRFConsumerBase.sol","file":"./VRFConsumerBase.sol","id":326,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":399,"sourceUnit":216,"src":"57:31:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":327,"name":"VRFConsumerBase","nameLocations":["115:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":215,"src":"115:15:4"},"id":328,"nodeType":"InheritanceSpecifier","src":"115:15:4"}],"canonicalName":"RandomNumber","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":398,"linearizedBaseContracts":[398,215,323],"name":"RandomNumber","nameLocation":"99:12:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":330,"mutability":"mutable","name":"keyHash","nameLocation":"154:7:4","nodeType":"VariableDeclaration","scope":398,"src":"137:24:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"137:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"mutability":"mutable","name":"fee","nameLocation":"184:3:4","nodeType":"VariableDeclaration","scope":398,"src":"167:20:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":331,"name":"uint256","nodeType":"ElementaryTypeName","src":"167:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"functionSelector":"42619f66","id":334,"mutability":"mutable","name":"randomResult","nameLocation":"213:12:4","nodeType":"VariableDeclaration","scope":398,"src":"198:27:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint256","nodeType":"ElementaryTypeName","src":"198:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":354,"nodeType":"Block","src":"807:141:4","statements":[{"expression":{"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":342,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"817:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"307836653735623536396130316566353664313863616236613865373165363630306436636538353338333464346135373438623732306430366638373862336134","id":343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"827:66:4","typeDescriptions":{"typeIdentifier":"t_rational_49962386514484245166271493471135870425413786137407811871694296720549827097508_by_1","typeString":"int_const 4996...(69 digits omitted)...7508"},"value":"0x6e75b569a01ef56d18cab6a8e71e6600d6ce853834d4a5748b720d06f878b3a4"},"src":"817:76:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":345,"nodeType":"ExpressionStatement","src":"817:76:4"},{"expression":{"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":346,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"903:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000_by_1","typeString":"int_const 100000000000000"},"id":351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"302e30303031","id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"909:6:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_10000","typeString":"rational_const 1 / 10000"},"value":"0.0001"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"918:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"924:2:4","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"918:8:4","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"909:17:4","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000_by_1","typeString":"int_const 100000000000000"}},"src":"903:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":353,"nodeType":"ExpressionStatement","src":"903:23:4"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"236:364:4","text":" Constructor inherits VRFConsumerBase\n \n Network: Polygon (Matic) Mumbai Testnet\n Chainlink VRF Coordinator address: 0x8C7382F9D8f56b33781fE506E897a4F1e2d17255\n LINK token address:                0x326C977E6efc84E512bB9C30f76E30c160eD06FB\n Key Hash: 0x6e75b569a01ef56d18cab6a8e71e6600d6ce853834d4a5748b720d06f878b3a4"},"id":355,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"307838433733383246394438663536623333373831664535303645383937613446316532643137323535","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"659:42:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x8C7382F9D8f56b33781fE506E897a4F1e2d17255"},{"hexValue":"307833323643393737453665666338344535313262423943333066373645333063313630654430364642","id":339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"734:42:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x326C977E6efc84E512bB9C30f76E30c160eD06FB"}],"id":340,"kind":"baseConstructorSpecifier","modifierName":{"id":337,"name":"VRFConsumerBase","nameLocations":["628:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":215,"src":"628:15:4"},"nodeType":"ModifierInvocation","src":"628:173:4"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":336,"nodeType":"ParameterList","parameters":[],"src":"616:2:4"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[],"src":"807:0:4"},"scope":398,"src":"605:343:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":379,"nodeType":"Block","src":"1065:156:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":366,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1106:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_RandomNumber_$398","typeString":"contract RandomNumber"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RandomNumber_$398","typeString":"contract RandomNumber"}],"id":365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1098:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":364,"name":"address","nodeType":"ElementaryTypeName","src":"1098:7:4","typeDescriptions":{}}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1098:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":362,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"1083:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$94","typeString":"contract LinkTokenInterface"}},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1088:9:4","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":26,"src":"1083:14:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1083:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":369,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"1115:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1083:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f756768204c494e4b202d2066696c6c20636f6e7472616374207769746820666175636574","id":371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1120:45:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_4bb3a9958b8c6e95beec57f36a0352593367170b4a84072c44b036bee3a36e74","typeString":"literal_string \"Not enough LINK - fill contract with faucet\""},"value":"Not enough LINK - fill contract with faucet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4bb3a9958b8c6e95beec57f36a0352593367170b4a84072c44b036bee3a36e74","typeString":"literal_string \"Not enough LINK - fill contract with faucet\""}],"id":361,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1075:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1075:91:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":373,"nodeType":"ExpressionStatement","src":"1075:91:4"},{"expression":{"arguments":[{"id":375,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"1201:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":376,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"1210:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":374,"name":"requestRandomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"1183:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes32,uint256) returns (bytes32)"}},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1183:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":360,"id":378,"nodeType":"Return","src":"1176:38:4"}]},"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"958:40:4","text":" Requests randomness "},"functionSelector":"dbdff2c1","id":380,"implemented":true,"kind":"function","modifiers":[],"name":"getRandomNumber","nameLocation":"1012:15:4","nodeType":"FunctionDefinition","parameters":{"id":357,"nodeType":"ParameterList","parameters":[],"src":"1027:2:4"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"requestId","nameLocation":"1054:9:4","nodeType":"VariableDeclaration","scope":380,"src":"1046:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":358,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1046:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1045:19:4"},"scope":398,"src":"1003:218:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[109],"body":{"id":396,"nodeType":"Block","src":"1376:47:4","statements":[{"expression":{"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":389,"name":"randomResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"1386:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":390,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"1402:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1402:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":393,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1401:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1386:30:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":395,"nodeType":"ExpressionStatement","src":"1386:30:4"}]},"documentation":{"id":381,"nodeType":"StructuredDocumentation","src":"1227:60:4","text":" Callback function used by VRF Coordinator"},"id":397,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomness","nameLocation":"1301:17:4","nodeType":"FunctionDefinition","overrides":{"id":387,"nodeType":"OverrideSpecifier","overrides":[],"src":"1367:8:4"},"parameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":383,"mutability":"mutable","name":"requestId","nameLocation":"1327:9:4","nodeType":"VariableDeclaration","scope":397,"src":"1319:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":382,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1319:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":385,"mutability":"mutable","name":"randomness","nameLocation":"1346:10:4","nodeType":"VariableDeclaration","scope":397,"src":"1338:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":384,"name":"uint256","nodeType":"ElementaryTypeName","src":"1338:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1318:39:4"},"returnParameters":{"id":388,"nodeType":"ParameterList","parameters":[],"src":"1376:0:4"},"scope":398,"src":"1292:131:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":399,"src":"90:1335:4","usedErrors":[]}],"src":"32:1393:4"},"id":4}},"contracts":{"contracts/LinkTokenInterface.sol":{"LinkTokenInterface":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"decimalPlaces","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"decreaseApproval","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"increaseApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"tokenName","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"tokenSymbol","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"totalTokensIssued","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseApproval(address,uint256)":"66188463","increaseApproval(address,uint256)":"d73dd623","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokensIssued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LinkTokenInterface.sol\":\"LinkTokenInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LinkTokenInterface.sol\":{\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cb1064885ecbcd9c3adba779e190cb4a538e5d4d15aeccb67d3376bdffc94bd\",\"dweb:/ipfs/QmcQHK6ewve7tFi4XXK65JthQg4kQzApQikWcURJjGt4iQ\"]}},\"version\":1}"}},"contracts/VRFConsumerBase.sol":{"VRFConsumerBase":{"abi":[{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"uint256","name":"randomness","type":"uint256"}],"name":"rawFulfillRandomness","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"rawFulfillRandomness(bytes32,uint256)":"94985ddd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"randomness\",\"type\":\"uint256\"}],\"name\":\"rawFulfillRandomness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator, _link) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash), and have told you the minimum LINKprice for VRF service. Make sure your contract has sufficient LINK, andcall requestRandomness(keyHash, fee, seed), where seed is the input youwant to generate randomness from.Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomness method.The randomness argument to fulfillRandomness is the actual random valuegenerated from your seed.The requestId argument is generated from the keyHash and the seed bymakeRequestId(keyHash, seed). If your contract could have concurrentrequests open, you can use the requestId to track which seed isassociated with which randomness. See VRFRequestIDBase.sol for moredetails. (See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.)Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. (Which is critical to making unpredictable randomness! See thenext section.) *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the ultimate input to the VRF is mixed with the block hash of theblock in which the request is made, user-provided seeds have no impacton its economic security properties. They are only included for APIcompatability with previous versions of this contract.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"https://docs.chain.link/docs/link-token-contracts\",\"params\":{\"_link\":\"address of LINK token contract\",\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"stateVariables\":{\"USER_SEED_PLACEHOLDER\":{\"details\":\"In order to keep backwards compatibility we have kept the user seed field around. We remove the use of it because given that the blockhash enters later, it overrides whatever randomness the used seed provides. Given that it adds no security, and can easily lead to misunderstandings, we have removed it from usage and can now provide a simpler API.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VRFConsumerBase.sol\":\"VRFConsumerBase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LinkTokenInterface.sol\":{\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cb1064885ecbcd9c3adba779e190cb4a538e5d4d15aeccb67d3376bdffc94bd\",\"dweb:/ipfs/QmcQHK6ewve7tFi4XXK65JthQg4kQzApQikWcURJjGt4iQ\"]},\"contracts/VRFConsumerBase.sol\":{\"keccak256\":\"0xcf89cc5e66d7e77b5583924226888a8ad0699a295210316a8cc2b110eb8e4b5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9aa5d569f018786a3a2858bb4b955e6e4e3bd209d8bd9e8fe56391ebffc1842\",\"dweb:/ipfs/QmWGbQ25qWXnxwDr9XDW9AM1VQ5fYNL7TP3RSfidKGuYfT\"]},\"contracts/VRFRequestIDBase.sol\":{\"keccak256\":\"0x2bf1168e8fe548fa990e0aeaf89ef90680f80aa31eeaf901f485df60de51d51b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79c72d66deaa4b0f251f3f0817f45ebceb71f5b4f94a86ac0e586de99f5af2b6\",\"dweb:/ipfs/QmcHkApHm5CAynjajcCUYppaKJ9sNWGZTEcSs4tUK8B5K5\"]}},\"version\":1}"}},"contracts/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/VRFConsumerBaseV2.sol\":{\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://038eef992d813c20737fbe94e3a36e5d541d1aa736158dd2a43dd5b840b8c360\",\"dweb:/ipfs/QmZWJ25Yr1sUSAsfJRKvTMDmGkmy63hHhB495CUL1bpNz4\"]}},\"version\":1}"}},"contracts/VRFRequestIDBase.sol":{"VRFRequestIDBase":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212203aa15a69dfdf3f29f9a7658672ffae918f45abce81e68909f4808c05bf4a2fa064736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE LOG1 GAS PUSH10 0xDFDF3F29F9A7658672FF 0xAE SWAP2 DUP16 GASLIMIT 0xAB 0xCE DUP2 0xE6 DUP10 MULMOD DELEGATECALL DUP1 DUP13 SDIV 0xBF 0x4A 0x2F LOG0 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"57:1527:3:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea26469706673582212203aa15a69dfdf3f29f9a7658672ffae918f45abce81e68909f4808c05bf4a2fa064736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE LOG1 GAS PUSH10 0xDFDF3F29F9A7658672FF 0xAE SWAP2 DUP16 GASLIMIT 0xAB 0xCE DUP2 0xE6 DUP10 MULMOD DELEGATECALL DUP1 DUP13 SDIV 0xBF 0x4A 0x2F LOG0 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"57:1527:3:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VRFRequestIDBase.sol\":\"VRFRequestIDBase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/VRFRequestIDBase.sol\":{\"keccak256\":\"0x2bf1168e8fe548fa990e0aeaf89ef90680f80aa31eeaf901f485df60de51d51b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79c72d66deaa4b0f251f3f0817f45ebceb71f5b4f94a86ac0e586de99f5af2b6\",\"dweb:/ipfs/QmcHkApHm5CAynjajcCUYppaKJ9sNWGZTEcSs4tUK8B5K5\"]}},\"version\":1}"}},"contracts/randomness.sol":{"RandomNumber":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"getRandomNumber","outputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"randomResult","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"uint256","name":"randomness","type":"uint256"}],"name":"rawFulfillRandomness","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_193":{"entryPoint":null,"id":193,"parameterSlots":2,"returnSlots":0},"@_355":{"entryPoint":null,"id":355,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"60c060405234801561001057600080fd5b50738c7382f9d8f56b33781fe506e897a4f1e2d1725573326c977e6efc84e512bb9c30f76e30c160ed06fb8173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050507f6e75b569a01ef56d18cab6a8e71e6600d6ce853834d4a5748b720d06f878b3a460001b600181905550655af3107a400060028190555060805160a0516109c261010e6000396000818160a60152610289015260008181610147015261024d01526109c26000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806342619f661461004657806394985ddd14610064578063dbdff2c114610080575b600080fd5b61004e61009e565b60405161005b9190610421565b60405180910390f35b61007e600480360381019061007991906104a3565b6100a4565b005b610088610140565b60405161009591906104f2565b60405180910390f35b60035481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610132576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101299061056a565b60405180910390fd5b61013c8282610232565b5050565b60006002547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161019e91906105cb565b602060405180830381865afa1580156101bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101df91906105fb565b1161021f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102169061069a565b60405180910390fd5b61022d600154600254610249565b905090565b600a8161023f91906106e9565b6003819055505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634000aea07f0000000000000000000000000000000000000000000000000000000000000000848660006040516020016102bd92919061071a565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016102ea939291906107d3565b6020604051808303816000875af1158015610309573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032d9190610849565b50600061034f8460003060008089815260200190815260200160002054610399565b905060016000808681526020019081526020016000205461037091906108a5565b6000808681526020019081526020016000208190555061039084826103d5565b91505092915050565b6000848484846040516020016103b294939291906108d9565b6040516020818303038152906040528051906020012060001c9050949350505050565b600082826040516020016103ea929190610960565b60405160208183030381529060405280519060200120905092915050565b6000819050919050565b61041b81610408565b82525050565b60006020820190506104366000830184610412565b92915050565b600080fd5b6000819050919050565b61045481610441565b811461045f57600080fd5b50565b6000813590506104718161044b565b92915050565b61048081610408565b811461048b57600080fd5b50565b60008135905061049d81610477565b92915050565b600080604083850312156104ba576104b961043c565b5b60006104c885828601610462565b92505060206104d98582860161048e565b9150509250929050565b6104ec81610441565b82525050565b600060208201905061050760008301846104e3565b92915050565b600082825260208201905092915050565b7f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00600082015250565b6000610554601f8361050d565b915061055f8261051e565b602082019050919050565b6000602082019050818103600083015261058381610547565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105b58261058a565b9050919050565b6105c5816105aa565b82525050565b60006020820190506105e060008301846105bc565b92915050565b6000815190506105f581610477565b92915050565b6000602082840312156106115761061061043c565b5b600061061f848285016105e6565b91505092915050565b7f4e6f7420656e6f756768204c494e4b202d2066696c6c20636f6e74726163742060008201527f7769746820666175636574000000000000000000000000000000000000000000602082015250565b6000610684602b8361050d565b915061068f82610628565b604082019050919050565b600060208201905081810360008301526106b381610677565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006106f482610408565b91506106ff83610408565b92508261070f5761070e6106ba565b5b828206905092915050565b600060408201905061072f60008301856104e3565b61073c6020830184610412565b9392505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561077d578082015181840152602081019050610762565b60008484015250505050565b6000601f19601f8301169050919050565b60006107a582610743565b6107af818561074e565b93506107bf81856020860161075f565b6107c881610789565b840191505092915050565b60006060820190506107e860008301866105bc565b6107f56020830185610412565b8181036040830152610807818461079a565b9050949350505050565b60008115159050919050565b61082681610811565b811461083157600080fd5b50565b6000815190506108438161081d565b92915050565b60006020828403121561085f5761085e61043c565b5b600061086d84828501610834565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108b082610408565b91506108bb83610408565b92508282019050808211156108d3576108d2610876565b5b92915050565b60006080820190506108ee60008301876104e3565b6108fb6020830186610412565b61090860408301856105bc565b6109156060830184610412565b95945050505050565b6000819050919050565b61093961093482610441565b61091e565b82525050565b6000819050919050565b61095a61095582610408565b61093f565b82525050565b600061096c8285610928565b60208201915061097c8284610949565b602082019150819050939250505056fea264697066735822122081668e82831e2ae1018e1411989411cc75b366f2ca53977f0b277f07a5c42a0964736f6c63430008110033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0x8C7382F9D8F56B33781FE506E897A4F1E2D17255 PUSH20 0x326C977E6EFC84E512BB9C30F76E30C160ED06FB DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH32 0x6E75B569A01EF56D18CAB6A8E71E6600D6CE853834D4A5748B720D06F878B3A4 PUSH1 0x0 SHL PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH6 0x5AF3107A4000 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x9C2 PUSH2 0x10E PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0xA6 ADD MSTORE PUSH2 0x289 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x147 ADD MSTORE PUSH2 0x24D ADD MSTORE PUSH2 0x9C2 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42619F66 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xDBDFF2C1 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0xA4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x88 PUSH2 0x140 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x132 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129 SWAP1 PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13C DUP3 DUP3 PUSH2 0x232 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x5FB JUMP JUMPDEST GT PUSH2 0x21F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x216 SWAP1 PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22D PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH2 0x249 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA DUP2 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2BD SWAP3 SWAP2 SWAP1 PUSH2 0x71A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7D3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x309 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x849 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x34F DUP5 PUSH1 0x0 ADDRESS PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x399 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x390 DUP5 DUP3 PUSH2 0x3D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3B2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3EA SWAP3 SWAP2 SWAP1 PUSH2 0x960 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x41B DUP2 PUSH2 0x408 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x436 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x412 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x454 DUP2 PUSH2 0x441 JUMP JUMPDEST DUP2 EQ PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x471 DUP2 PUSH2 0x44B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x480 DUP2 PUSH2 0x408 JUMP JUMPDEST DUP2 EQ PUSH2 0x48B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x49D DUP2 PUSH2 0x477 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4BA JUMPI PUSH2 0x4B9 PUSH2 0x43C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C8 DUP6 DUP3 DUP7 ADD PUSH2 0x462 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4D9 DUP6 DUP3 DUP7 ADD PUSH2 0x48E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x4EC DUP2 PUSH2 0x441 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x507 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x554 PUSH1 0x1F DUP4 PUSH2 0x50D JUMP JUMPDEST SWAP2 POP PUSH2 0x55F DUP3 PUSH2 0x51E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x583 DUP2 PUSH2 0x547 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B5 DUP3 PUSH2 0x58A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5C5 DUP2 PUSH2 0x5AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5E0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5F5 DUP2 PUSH2 0x477 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x611 JUMPI PUSH2 0x610 PUSH2 0x43C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x61F DUP5 DUP3 DUP6 ADD PUSH2 0x5E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F756768204C494E4B202D2066696C6C20636F6E747261637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7769746820666175636574000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x684 PUSH1 0x2B DUP4 PUSH2 0x50D JUMP JUMPDEST SWAP2 POP PUSH2 0x68F DUP3 PUSH2 0x628 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6B3 DUP2 PUSH2 0x677 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6F4 DUP3 PUSH2 0x408 JUMP JUMPDEST SWAP2 POP PUSH2 0x6FF DUP4 PUSH2 0x408 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x70F JUMPI PUSH2 0x70E PUSH2 0x6BA JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x72F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0x73C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x412 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x77D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x762 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A5 DUP3 PUSH2 0x743 JUMP JUMPDEST PUSH2 0x7AF DUP2 DUP6 PUSH2 0x74E JUMP JUMPDEST SWAP4 POP PUSH2 0x7BF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x75F JUMP JUMPDEST PUSH2 0x7C8 DUP2 PUSH2 0x789 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x7E8 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x5BC JUMP JUMPDEST PUSH2 0x7F5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x412 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x807 DUP2 DUP5 PUSH2 0x79A JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x826 DUP2 PUSH2 0x811 JUMP JUMPDEST DUP2 EQ PUSH2 0x831 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x843 DUP2 PUSH2 0x81D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x85F JUMPI PUSH2 0x85E PUSH2 0x43C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x86D DUP5 DUP3 DUP6 ADD PUSH2 0x834 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8B0 DUP3 PUSH2 0x408 JUMP JUMPDEST SWAP2 POP PUSH2 0x8BB DUP4 PUSH2 0x408 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x8D3 JUMPI PUSH2 0x8D2 PUSH2 0x876 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x8EE PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0x8FB PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x412 JUMP JUMPDEST PUSH2 0x908 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x5BC JUMP JUMPDEST PUSH2 0x915 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x412 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x939 PUSH2 0x934 DUP3 PUSH2 0x441 JUMP JUMPDEST PUSH2 0x91E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x95A PUSH2 0x955 DUP3 PUSH2 0x408 JUMP JUMPDEST PUSH2 0x93F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x96C DUP3 DUP6 PUSH2 0x928 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x97C DUP3 DUP5 PUSH2 0x949 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 PUSH7 0x8E82831E2AE101 DUP15 EQ GT SWAP9 SWAP5 GT 0xCC PUSH22 0xB366F2CA53977F0B277F07A5C42A0964736F6C634300 ADDMOD GT STOP CALLER ","sourceMap":"90:1335:4:-:0;;;605:343;;;;;;;;;;659:42;734;9312:15:1;9295:32;;;;;;;;;;9359:5;9333:32;;;;;;;;;;9237:133;;827:66:4::1;817:76;;:7;:76;;;;909:17;903:3;:23;;;;90:1335:::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@fulfillRandomness_397":{"entryPoint":562,"id":397,"parameterSlots":2,"returnSlots":0},"@getRandomNumber_380":{"entryPoint":320,"id":380,"parameterSlots":0,"returnSlots":1},"@makeRequestId_322":{"entryPoint":981,"id":322,"parameterSlots":2,"returnSlots":1},"@makeVRFInputSeed_303":{"entryPoint":921,"id":303,"parameterSlots":4,"returnSlots":1},"@randomResult_334":{"entryPoint":158,"id":334,"parameterSlots":0,"returnSlots":0},"@rawFulfillRandomness_214":{"entryPoint":164,"id":214,"parameterSlots":2,"returnSlots":0},"@requestRandomness_165":{"entryPoint":585,"id":165,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":2100,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":1122,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":1166,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1510,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":2121,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_uint256":{"entryPoint":1187,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":1531,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1468,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":1251,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":2344,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":1946,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_4bb3a9958b8c6e95beec57f36a0352593367170b4a84072c44b036bee3a36e74_to_t_string_memory_ptr_fromStack":{"entryPoint":1655,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445_to_t_string_memory_ptr_fromStack":{"entryPoint":1351,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1042,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":2377,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes32_t_uint256__to_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":2400,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1483,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":2003,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":1266,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed":{"entryPoint":1818,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint256_t_address_t_uint256__to_t_bytes32_t_uint256_t_address_t_uint256__fromStack_reversed":{"entryPoint":2265,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4bb3a9958b8c6e95beec57f36a0352593367170b4a84072c44b036bee3a36e74__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1690,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1386,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":1057,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":1859,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":1870,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1293,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2213,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1450,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":2065,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":1089,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1418,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1032,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":1887,"id":null,"parameterSlots":3,"returnSlots":0},"leftAlign_t_bytes32":{"entryPoint":2334,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":2367,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":1769,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2166,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":1722,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1084,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1929,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_4bb3a9958b8c6e95beec57f36a0352593367170b4a84072c44b036bee3a36e74":{"entryPoint":1576,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445":{"entryPoint":1310,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":2077,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":1099,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1143,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10322:5","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:5","statements":[{"nodeType":"YulAssignment","src":"62:16:5","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:5"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:5","type":""}],"src":"7:77:5"},{"body":{"nodeType":"YulBlock","src":"155:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:5"},"nodeType":"YulFunctionCall","src":"177:24:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:5"},"nodeType":"YulFunctionCall","src":"165:37:5"},"nodeType":"YulExpressionStatement","src":"165:37:5"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:5","type":""}],"src":"90:118:5"},{"body":{"nodeType":"YulBlock","src":"312:124:5","statements":[{"nodeType":"YulAssignment","src":"322:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:5"},"nodeType":"YulFunctionCall","src":"330:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:5"},"nodeType":"YulFunctionCall","src":"411:17:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:5"},"nodeType":"YulFunctionCall","src":"358:71:5"},"nodeType":"YulExpressionStatement","src":"358:71:5"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:5","type":""}],"src":"214:222:5"},{"body":{"nodeType":"YulBlock","src":"482:35:5","statements":[{"nodeType":"YulAssignment","src":"492:19:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"508:2:5","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"502:5:5"},"nodeType":"YulFunctionCall","src":"502:9:5"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"492:6:5"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"475:6:5","type":""}],"src":"442:75:5"},{"body":{"nodeType":"YulBlock","src":"612:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"629:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"632:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"622:6:5"},"nodeType":"YulFunctionCall","src":"622:12:5"},"nodeType":"YulExpressionStatement","src":"622:12:5"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"523:117:5"},{"body":{"nodeType":"YulBlock","src":"735:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:5"},"nodeType":"YulFunctionCall","src":"745:12:5"},"nodeType":"YulExpressionStatement","src":"745:12:5"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"646:117:5"},{"body":{"nodeType":"YulBlock","src":"814:32:5","statements":[{"nodeType":"YulAssignment","src":"824:16:5","value":{"name":"value","nodeType":"YulIdentifier","src":"835:5:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"824:7:5"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"796:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"806:7:5","type":""}],"src":"769:77:5"},{"body":{"nodeType":"YulBlock","src":"895:79:5","statements":[{"body":{"nodeType":"YulBlock","src":"952:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"961:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"964:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"954:6:5"},"nodeType":"YulFunctionCall","src":"954:12:5"},"nodeType":"YulExpressionStatement","src":"954:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"918:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"943:5:5"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"925:17:5"},"nodeType":"YulFunctionCall","src":"925:24:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"915:2:5"},"nodeType":"YulFunctionCall","src":"915:35:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"908:6:5"},"nodeType":"YulFunctionCall","src":"908:43:5"},"nodeType":"YulIf","src":"905:63:5"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"888:5:5","type":""}],"src":"852:122:5"},{"body":{"nodeType":"YulBlock","src":"1032:87:5","statements":[{"nodeType":"YulAssignment","src":"1042:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1064:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1051:12:5"},"nodeType":"YulFunctionCall","src":"1051:20:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1042:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1107:5:5"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1080:26:5"},"nodeType":"YulFunctionCall","src":"1080:33:5"},"nodeType":"YulExpressionStatement","src":"1080:33:5"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1010:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"1018:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1026:5:5","type":""}],"src":"980:139:5"},{"body":{"nodeType":"YulBlock","src":"1168:79:5","statements":[{"body":{"nodeType":"YulBlock","src":"1225:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1234:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1237:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1227:6:5"},"nodeType":"YulFunctionCall","src":"1227:12:5"},"nodeType":"YulExpressionStatement","src":"1227:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1191:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1216:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1198:17:5"},"nodeType":"YulFunctionCall","src":"1198:24:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1188:2:5"},"nodeType":"YulFunctionCall","src":"1188:35:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1181:6:5"},"nodeType":"YulFunctionCall","src":"1181:43:5"},"nodeType":"YulIf","src":"1178:63:5"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1161:5:5","type":""}],"src":"1125:122:5"},{"body":{"nodeType":"YulBlock","src":"1305:87:5","statements":[{"nodeType":"YulAssignment","src":"1315:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1337:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1324:12:5"},"nodeType":"YulFunctionCall","src":"1324:20:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1315:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1380:5:5"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1353:26:5"},"nodeType":"YulFunctionCall","src":"1353:33:5"},"nodeType":"YulExpressionStatement","src":"1353:33:5"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1283:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"1291:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1299:5:5","type":""}],"src":"1253:139:5"},{"body":{"nodeType":"YulBlock","src":"1481:391:5","statements":[{"body":{"nodeType":"YulBlock","src":"1527:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1529:77:5"},"nodeType":"YulFunctionCall","src":"1529:79:5"},"nodeType":"YulExpressionStatement","src":"1529:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1502:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"1511:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1498:3:5"},"nodeType":"YulFunctionCall","src":"1498:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"1523:2:5","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1494:3:5"},"nodeType":"YulFunctionCall","src":"1494:32:5"},"nodeType":"YulIf","src":"1491:119:5"},{"nodeType":"YulBlock","src":"1620:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"1635:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"1649:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1639:6:5","type":""}]},{"nodeType":"YulAssignment","src":"1664:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1699:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"1710:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1695:3:5"},"nodeType":"YulFunctionCall","src":"1695:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1719:7:5"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"1674:20:5"},"nodeType":"YulFunctionCall","src":"1674:53:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1664:6:5"}]}]},{"nodeType":"YulBlock","src":"1747:118:5","statements":[{"nodeType":"YulVariableDeclaration","src":"1762:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"1776:2:5","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1766:6:5","type":""}]},{"nodeType":"YulAssignment","src":"1792:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1827:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"1838:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1823:3:5"},"nodeType":"YulFunctionCall","src":"1823:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1847:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1802:20:5"},"nodeType":"YulFunctionCall","src":"1802:53:5"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1792:6:5"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1443:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1454:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1466:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1474:6:5","type":""}],"src":"1398:474:5"},{"body":{"nodeType":"YulBlock","src":"1943:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1960:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1983:5:5"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1965:17:5"},"nodeType":"YulFunctionCall","src":"1965:24:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1953:6:5"},"nodeType":"YulFunctionCall","src":"1953:37:5"},"nodeType":"YulExpressionStatement","src":"1953:37:5"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1931:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1938:3:5","type":""}],"src":"1878:118:5"},{"body":{"nodeType":"YulBlock","src":"2100:124:5","statements":[{"nodeType":"YulAssignment","src":"2110:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2122:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2118:3:5"},"nodeType":"YulFunctionCall","src":"2118:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2110:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2190:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2203:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2214:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2199:3:5"},"nodeType":"YulFunctionCall","src":"2199:17:5"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"2146:43:5"},"nodeType":"YulFunctionCall","src":"2146:71:5"},"nodeType":"YulExpressionStatement","src":"2146:71:5"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2072:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2084:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2095:4:5","type":""}],"src":"2002:222:5"},{"body":{"nodeType":"YulBlock","src":"2326:73:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2343:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"2348:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2336:6:5"},"nodeType":"YulFunctionCall","src":"2336:19:5"},"nodeType":"YulExpressionStatement","src":"2336:19:5"},{"nodeType":"YulAssignment","src":"2364:29:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2383:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"2388:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2379:3:5"},"nodeType":"YulFunctionCall","src":"2379:14:5"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2364:11:5"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2298:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"2303:6:5","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2314:11:5","type":""}],"src":"2230:169:5"},{"body":{"nodeType":"YulBlock","src":"2511:75:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2533:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"2541:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2529:3:5"},"nodeType":"YulFunctionCall","src":"2529:14:5"},{"hexValue":"4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c","kind":"string","nodeType":"YulLiteral","src":"2545:33:5","type":"","value":"Only VRFCoordinator can fulfill"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2522:6:5"},"nodeType":"YulFunctionCall","src":"2522:57:5"},"nodeType":"YulExpressionStatement","src":"2522:57:5"}]},"name":"store_literal_in_memory_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2503:6:5","type":""}],"src":"2405:181:5"},{"body":{"nodeType":"YulBlock","src":"2738:220:5","statements":[{"nodeType":"YulAssignment","src":"2748:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2814:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"2819:2:5","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2755:58:5"},"nodeType":"YulFunctionCall","src":"2755:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2748:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2920:3:5"}],"functionName":{"name":"store_literal_in_memory_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445","nodeType":"YulIdentifier","src":"2831:88:5"},"nodeType":"YulFunctionCall","src":"2831:93:5"},"nodeType":"YulExpressionStatement","src":"2831:93:5"},{"nodeType":"YulAssignment","src":"2933:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2944:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"2949:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2940:3:5"},"nodeType":"YulFunctionCall","src":"2940:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2933:3:5"}]}]},"name":"abi_encode_t_stringliteral_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2726:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2734:3:5","type":""}],"src":"2592:366:5"},{"body":{"nodeType":"YulBlock","src":"3135:248:5","statements":[{"nodeType":"YulAssignment","src":"3145:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3157:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"3168:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3153:3:5"},"nodeType":"YulFunctionCall","src":"3153:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3145:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3192:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"3203:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3188:3:5"},"nodeType":"YulFunctionCall","src":"3188:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3211:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"3217:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3207:3:5"},"nodeType":"YulFunctionCall","src":"3207:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3181:6:5"},"nodeType":"YulFunctionCall","src":"3181:47:5"},"nodeType":"YulExpressionStatement","src":"3181:47:5"},{"nodeType":"YulAssignment","src":"3237:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3371:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3245:124:5"},"nodeType":"YulFunctionCall","src":"3245:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3237:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3115:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3130:4:5","type":""}],"src":"2964:419:5"},{"body":{"nodeType":"YulBlock","src":"3434:81:5","statements":[{"nodeType":"YulAssignment","src":"3444:65:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3459:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"3466:42:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3455:3:5"},"nodeType":"YulFunctionCall","src":"3455:54:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3444:7:5"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3416:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3426:7:5","type":""}],"src":"3389:126:5"},{"body":{"nodeType":"YulBlock","src":"3566:51:5","statements":[{"nodeType":"YulAssignment","src":"3576:35:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3605:5:5"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3587:17:5"},"nodeType":"YulFunctionCall","src":"3587:24:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3576:7:5"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3548:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3558:7:5","type":""}],"src":"3521:96:5"},{"body":{"nodeType":"YulBlock","src":"3688:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3705:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3728:5:5"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3710:17:5"},"nodeType":"YulFunctionCall","src":"3710:24:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3698:6:5"},"nodeType":"YulFunctionCall","src":"3698:37:5"},"nodeType":"YulExpressionStatement","src":"3698:37:5"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3676:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3683:3:5","type":""}],"src":"3623:118:5"},{"body":{"nodeType":"YulBlock","src":"3845:124:5","statements":[{"nodeType":"YulAssignment","src":"3855:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3867:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"3878:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3863:3:5"},"nodeType":"YulFunctionCall","src":"3863:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3855:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3935:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3948:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"3959:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3944:3:5"},"nodeType":"YulFunctionCall","src":"3944:17:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3891:43:5"},"nodeType":"YulFunctionCall","src":"3891:71:5"},"nodeType":"YulExpressionStatement","src":"3891:71:5"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3817:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3829:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3840:4:5","type":""}],"src":"3747:222:5"},{"body":{"nodeType":"YulBlock","src":"4038:80:5","statements":[{"nodeType":"YulAssignment","src":"4048:22:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4063:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4057:5:5"},"nodeType":"YulFunctionCall","src":"4057:13:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4048:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4106:5:5"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"4079:26:5"},"nodeType":"YulFunctionCall","src":"4079:33:5"},"nodeType":"YulExpressionStatement","src":"4079:33:5"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4016:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"4024:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4032:5:5","type":""}],"src":"3975:143:5"},{"body":{"nodeType":"YulBlock","src":"4201:274:5","statements":[{"body":{"nodeType":"YulBlock","src":"4247:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4249:77:5"},"nodeType":"YulFunctionCall","src":"4249:79:5"},"nodeType":"YulExpressionStatement","src":"4249:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4222:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"4231:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4218:3:5"},"nodeType":"YulFunctionCall","src":"4218:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"4243:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4214:3:5"},"nodeType":"YulFunctionCall","src":"4214:32:5"},"nodeType":"YulIf","src":"4211:119:5"},{"nodeType":"YulBlock","src":"4340:128:5","statements":[{"nodeType":"YulVariableDeclaration","src":"4355:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"4369:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4359:6:5","type":""}]},{"nodeType":"YulAssignment","src":"4384:74:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4430:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"4441:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4426:3:5"},"nodeType":"YulFunctionCall","src":"4426:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4450:7:5"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"4394:31:5"},"nodeType":"YulFunctionCall","src":"4394:64:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4384:6:5"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4171:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4182:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4194:6:5","type":""}],"src":"4124:351:5"},{"body":{"nodeType":"YulBlock","src":"4587:124:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4609:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"4617:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4605:3:5"},"nodeType":"YulFunctionCall","src":"4605:14:5"},{"hexValue":"4e6f7420656e6f756768204c494e4b202d2066696c6c20636f6e747261637420","kind":"string","nodeType":"YulLiteral","src":"4621:34:5","type":"","value":"Not enough LINK - fill contract "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4598:6:5"},"nodeType":"YulFunctionCall","src":"4598:58:5"},"nodeType":"YulExpressionStatement","src":"4598:58:5"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4677:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"4685:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4673:3:5"},"nodeType":"YulFunctionCall","src":"4673:15:5"},{"hexValue":"7769746820666175636574","kind":"string","nodeType":"YulLiteral","src":"4690:13:5","type":"","value":"with faucet"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4666:6:5"},"nodeType":"YulFunctionCall","src":"4666:38:5"},"nodeType":"YulExpressionStatement","src":"4666:38:5"}]},"name":"store_literal_in_memory_4bb3a9958b8c6e95beec57f36a0352593367170b4a84072c44b036bee3a36e74","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4579:6:5","type":""}],"src":"4481:230:5"},{"body":{"nodeType":"YulBlock","src":"4863:220:5","statements":[{"nodeType":"YulAssignment","src":"4873:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4939:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"4944:2:5","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4880:58:5"},"nodeType":"YulFunctionCall","src":"4880:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4873:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5045:3:5"}],"functionName":{"name":"store_literal_in_memory_4bb3a9958b8c6e95beec57f36a0352593367170b4a84072c44b036bee3a36e74","nodeType":"YulIdentifier","src":"4956:88:5"},"nodeType":"YulFunctionCall","src":"4956:93:5"},"nodeType":"YulExpressionStatement","src":"4956:93:5"},{"nodeType":"YulAssignment","src":"5058:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5069:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"5074:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5065:3:5"},"nodeType":"YulFunctionCall","src":"5065:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5058:3:5"}]}]},"name":"abi_encode_t_stringliteral_4bb3a9958b8c6e95beec57f36a0352593367170b4a84072c44b036bee3a36e74_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4851:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4859:3:5","type":""}],"src":"4717:366:5"},{"body":{"nodeType":"YulBlock","src":"5260:248:5","statements":[{"nodeType":"YulAssignment","src":"5270:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5282:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"5293:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5278:3:5"},"nodeType":"YulFunctionCall","src":"5278:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5270:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5317:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"5328:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5313:3:5"},"nodeType":"YulFunctionCall","src":"5313:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5336:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"5342:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5332:3:5"},"nodeType":"YulFunctionCall","src":"5332:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5306:6:5"},"nodeType":"YulFunctionCall","src":"5306:47:5"},"nodeType":"YulExpressionStatement","src":"5306:47:5"},{"nodeType":"YulAssignment","src":"5362:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5496:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_4bb3a9958b8c6e95beec57f36a0352593367170b4a84072c44b036bee3a36e74_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5370:124:5"},"nodeType":"YulFunctionCall","src":"5370:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5362:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_4bb3a9958b8c6e95beec57f36a0352593367170b4a84072c44b036bee3a36e74__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5240:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5255:4:5","type":""}],"src":"5089:419:5"},{"body":{"nodeType":"YulBlock","src":"5542:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5559:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5562:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5552:6:5"},"nodeType":"YulFunctionCall","src":"5552:88:5"},"nodeType":"YulExpressionStatement","src":"5552:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5656:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5659:4:5","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5649:6:5"},"nodeType":"YulFunctionCall","src":"5649:15:5"},"nodeType":"YulExpressionStatement","src":"5649:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5680:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5683:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5673:6:5"},"nodeType":"YulFunctionCall","src":"5673:15:5"},"nodeType":"YulExpressionStatement","src":"5673:15:5"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"5514:180:5"},{"body":{"nodeType":"YulBlock","src":"5734:142:5","statements":[{"nodeType":"YulAssignment","src":"5744:25:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5767:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5749:17:5"},"nodeType":"YulFunctionCall","src":"5749:20:5"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"5744:1:5"}]},{"nodeType":"YulAssignment","src":"5778:25:5","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5801:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5783:17:5"},"nodeType":"YulFunctionCall","src":"5783:20:5"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"5778:1:5"}]},{"body":{"nodeType":"YulBlock","src":"5825:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"5827:16:5"},"nodeType":"YulFunctionCall","src":"5827:18:5"},"nodeType":"YulExpressionStatement","src":"5827:18:5"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5822:1:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5815:6:5"},"nodeType":"YulFunctionCall","src":"5815:9:5"},"nodeType":"YulIf","src":"5812:35:5"},{"nodeType":"YulAssignment","src":"5856:14:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5865:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"5868:1:5"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"5861:3:5"},"nodeType":"YulFunctionCall","src":"5861:9:5"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"5856:1:5"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5723:1:5","type":""},{"name":"y","nodeType":"YulTypedName","src":"5726:1:5","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"5732:1:5","type":""}],"src":"5700:176:5"},{"body":{"nodeType":"YulBlock","src":"6008:206:5","statements":[{"nodeType":"YulAssignment","src":"6018:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6030:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"6041:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6026:3:5"},"nodeType":"YulFunctionCall","src":"6026:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6018:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6098:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6111:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"6122:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6107:3:5"},"nodeType":"YulFunctionCall","src":"6107:17:5"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6054:43:5"},"nodeType":"YulFunctionCall","src":"6054:71:5"},"nodeType":"YulExpressionStatement","src":"6054:71:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6179:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6192:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"6203:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6188:3:5"},"nodeType":"YulFunctionCall","src":"6188:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6135:43:5"},"nodeType":"YulFunctionCall","src":"6135:72:5"},"nodeType":"YulExpressionStatement","src":"6135:72:5"}]},"name":"abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5972:9:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5984:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5992:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6003:4:5","type":""}],"src":"5882:332:5"},{"body":{"nodeType":"YulBlock","src":"6278:40:5","statements":[{"nodeType":"YulAssignment","src":"6289:22:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6305:5:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6299:5:5"},"nodeType":"YulFunctionCall","src":"6299:12:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6289:6:5"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6261:5:5","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6271:6:5","type":""}],"src":"6220:98:5"},{"body":{"nodeType":"YulBlock","src":"6419:73:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6436:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"6441:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6429:6:5"},"nodeType":"YulFunctionCall","src":"6429:19:5"},"nodeType":"YulExpressionStatement","src":"6429:19:5"},{"nodeType":"YulAssignment","src":"6457:29:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6476:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"6481:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6472:3:5"},"nodeType":"YulFunctionCall","src":"6472:14:5"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6457:11:5"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6391:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"6396:6:5","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6407:11:5","type":""}],"src":"6324:168:5"},{"body":{"nodeType":"YulBlock","src":"6560:184:5","statements":[{"nodeType":"YulVariableDeclaration","src":"6570:10:5","value":{"kind":"number","nodeType":"YulLiteral","src":"6579:1:5","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6574:1:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"6639:63:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6664:3:5"},{"name":"i","nodeType":"YulIdentifier","src":"6669:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6660:3:5"},"nodeType":"YulFunctionCall","src":"6660:11:5"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6683:3:5"},{"name":"i","nodeType":"YulIdentifier","src":"6688:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6679:3:5"},"nodeType":"YulFunctionCall","src":"6679:11:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6673:5:5"},"nodeType":"YulFunctionCall","src":"6673:18:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6653:6:5"},"nodeType":"YulFunctionCall","src":"6653:39:5"},"nodeType":"YulExpressionStatement","src":"6653:39:5"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6600:1:5"},{"name":"length","nodeType":"YulIdentifier","src":"6603:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6597:2:5"},"nodeType":"YulFunctionCall","src":"6597:13:5"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6611:19:5","statements":[{"nodeType":"YulAssignment","src":"6613:15:5","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6622:1:5"},{"kind":"number","nodeType":"YulLiteral","src":"6625:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6618:3:5"},"nodeType":"YulFunctionCall","src":"6618:10:5"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6613:1:5"}]}]},"pre":{"nodeType":"YulBlock","src":"6593:3:5","statements":[]},"src":"6589:113:5"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6722:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"6727:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6718:3:5"},"nodeType":"YulFunctionCall","src":"6718:16:5"},{"kind":"number","nodeType":"YulLiteral","src":"6736:1:5","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6711:6:5"},"nodeType":"YulFunctionCall","src":"6711:27:5"},"nodeType":"YulExpressionStatement","src":"6711:27:5"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6542:3:5","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6547:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"6552:6:5","type":""}],"src":"6498:246:5"},{"body":{"nodeType":"YulBlock","src":"6798:54:5","statements":[{"nodeType":"YulAssignment","src":"6808:38:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6826:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"6833:2:5","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6822:3:5"},"nodeType":"YulFunctionCall","src":"6822:14:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6842:2:5","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6838:3:5"},"nodeType":"YulFunctionCall","src":"6838:7:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6818:3:5"},"nodeType":"YulFunctionCall","src":"6818:28:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6808:6:5"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6781:5:5","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6791:6:5","type":""}],"src":"6750:102:5"},{"body":{"nodeType":"YulBlock","src":"6948:283:5","statements":[{"nodeType":"YulVariableDeclaration","src":"6958:52:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7004:5:5"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"6972:31:5"},"nodeType":"YulFunctionCall","src":"6972:38:5"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6962:6:5","type":""}]},{"nodeType":"YulAssignment","src":"7019:77:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7084:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"7089:6:5"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7026:57:5"},"nodeType":"YulFunctionCall","src":"7026:70:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7019:3:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7144:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"7151:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7140:3:5"},"nodeType":"YulFunctionCall","src":"7140:16:5"},{"name":"pos","nodeType":"YulIdentifier","src":"7158:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"7163:6:5"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7105:34:5"},"nodeType":"YulFunctionCall","src":"7105:65:5"},"nodeType":"YulExpressionStatement","src":"7105:65:5"},{"nodeType":"YulAssignment","src":"7179:46:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7190:3:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7217:6:5"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7195:21:5"},"nodeType":"YulFunctionCall","src":"7195:29:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7186:3:5"},"nodeType":"YulFunctionCall","src":"7186:39:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7179:3:5"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6929:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6936:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6944:3:5","type":""}],"src":"6858:373:5"},{"body":{"nodeType":"YulBlock","src":"7409:357:5","statements":[{"nodeType":"YulAssignment","src":"7419:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7431:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"7442:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7427:3:5"},"nodeType":"YulFunctionCall","src":"7427:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7419:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7499:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7512:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"7523:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7508:3:5"},"nodeType":"YulFunctionCall","src":"7508:17:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7455:43:5"},"nodeType":"YulFunctionCall","src":"7455:71:5"},"nodeType":"YulExpressionStatement","src":"7455:71:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7580:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7593:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"7604:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:5"},"nodeType":"YulFunctionCall","src":"7589:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7536:43:5"},"nodeType":"YulFunctionCall","src":"7536:72:5"},"nodeType":"YulExpressionStatement","src":"7536:72:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7629:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"7640:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7625:3:5"},"nodeType":"YulFunctionCall","src":"7625:18:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7649:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"7655:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7645:3:5"},"nodeType":"YulFunctionCall","src":"7645:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7618:6:5"},"nodeType":"YulFunctionCall","src":"7618:48:5"},"nodeType":"YulExpressionStatement","src":"7618:48:5"},{"nodeType":"YulAssignment","src":"7675:84:5","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7745:6:5"},{"name":"tail","nodeType":"YulIdentifier","src":"7754:4:5"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7683:61:5"},"nodeType":"YulFunctionCall","src":"7683:76:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7675:4:5"}]}]},"name":"abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7365:9:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7377:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7385:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7393:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7404:4:5","type":""}],"src":"7237:529:5"},{"body":{"nodeType":"YulBlock","src":"7814:48:5","statements":[{"nodeType":"YulAssignment","src":"7824:32:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7849:5:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7842:6:5"},"nodeType":"YulFunctionCall","src":"7842:13:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7835:6:5"},"nodeType":"YulFunctionCall","src":"7835:21:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7824:7:5"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7796:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7806:7:5","type":""}],"src":"7772:90:5"},{"body":{"nodeType":"YulBlock","src":"7908:76:5","statements":[{"body":{"nodeType":"YulBlock","src":"7962:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7971:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7974:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7964:6:5"},"nodeType":"YulFunctionCall","src":"7964:12:5"},"nodeType":"YulExpressionStatement","src":"7964:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7931:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7953:5:5"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"7938:14:5"},"nodeType":"YulFunctionCall","src":"7938:21:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7928:2:5"},"nodeType":"YulFunctionCall","src":"7928:32:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7921:6:5"},"nodeType":"YulFunctionCall","src":"7921:40:5"},"nodeType":"YulIf","src":"7918:60:5"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7901:5:5","type":""}],"src":"7868:116:5"},{"body":{"nodeType":"YulBlock","src":"8050:77:5","statements":[{"nodeType":"YulAssignment","src":"8060:22:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8075:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8069:5:5"},"nodeType":"YulFunctionCall","src":"8069:13:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8060:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8115:5:5"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"8091:23:5"},"nodeType":"YulFunctionCall","src":"8091:30:5"},"nodeType":"YulExpressionStatement","src":"8091:30:5"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8028:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"8036:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8044:5:5","type":""}],"src":"7990:137:5"},{"body":{"nodeType":"YulBlock","src":"8207:271:5","statements":[{"body":{"nodeType":"YulBlock","src":"8253:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8255:77:5"},"nodeType":"YulFunctionCall","src":"8255:79:5"},"nodeType":"YulExpressionStatement","src":"8255:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8228:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"8237:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8224:3:5"},"nodeType":"YulFunctionCall","src":"8224:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"8249:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8220:3:5"},"nodeType":"YulFunctionCall","src":"8220:32:5"},"nodeType":"YulIf","src":"8217:119:5"},{"nodeType":"YulBlock","src":"8346:125:5","statements":[{"nodeType":"YulVariableDeclaration","src":"8361:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"8375:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8365:6:5","type":""}]},{"nodeType":"YulAssignment","src":"8390:71:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8433:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"8444:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8429:3:5"},"nodeType":"YulFunctionCall","src":"8429:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8453:7:5"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"8400:28:5"},"nodeType":"YulFunctionCall","src":"8400:61:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8390:6:5"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8177:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8188:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8200:6:5","type":""}],"src":"8133:345:5"},{"body":{"nodeType":"YulBlock","src":"8512:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8529:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8532:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8522:6:5"},"nodeType":"YulFunctionCall","src":"8522:88:5"},"nodeType":"YulExpressionStatement","src":"8522:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8626:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8629:4:5","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8619:6:5"},"nodeType":"YulFunctionCall","src":"8619:15:5"},"nodeType":"YulExpressionStatement","src":"8619:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8650:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8653:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8643:6:5"},"nodeType":"YulFunctionCall","src":"8643:15:5"},"nodeType":"YulExpressionStatement","src":"8643:15:5"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8484:180:5"},{"body":{"nodeType":"YulBlock","src":"8714:147:5","statements":[{"nodeType":"YulAssignment","src":"8724:25:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8747:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8729:17:5"},"nodeType":"YulFunctionCall","src":"8729:20:5"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"8724:1:5"}]},{"nodeType":"YulAssignment","src":"8758:25:5","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8781:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8763:17:5"},"nodeType":"YulFunctionCall","src":"8763:20:5"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"8758:1:5"}]},{"nodeType":"YulAssignment","src":"8792:16:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8803:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"8806:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8799:3:5"},"nodeType":"YulFunctionCall","src":"8799:9:5"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"8792:3:5"}]},{"body":{"nodeType":"YulBlock","src":"8832:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8834:16:5"},"nodeType":"YulFunctionCall","src":"8834:18:5"},"nodeType":"YulExpressionStatement","src":"8834:18:5"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8824:1:5"},{"name":"sum","nodeType":"YulIdentifier","src":"8827:3:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8821:2:5"},"nodeType":"YulFunctionCall","src":"8821:10:5"},"nodeType":"YulIf","src":"8818:36:5"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8701:1:5","type":""},{"name":"y","nodeType":"YulTypedName","src":"8704:1:5","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"8710:3:5","type":""}],"src":"8670:191:5"},{"body":{"nodeType":"YulBlock","src":"9049:371:5","statements":[{"nodeType":"YulAssignment","src":"9059:27:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9071:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"9082:3:5","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9067:3:5"},"nodeType":"YulFunctionCall","src":"9067:19:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9059:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9140:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9153:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"9164:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9149:3:5"},"nodeType":"YulFunctionCall","src":"9149:17:5"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"9096:43:5"},"nodeType":"YulFunctionCall","src":"9096:71:5"},"nodeType":"YulExpressionStatement","src":"9096:71:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9221:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9234:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"9245:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9230:3:5"},"nodeType":"YulFunctionCall","src":"9230:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9177:43:5"},"nodeType":"YulFunctionCall","src":"9177:72:5"},"nodeType":"YulExpressionStatement","src":"9177:72:5"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9303:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9316:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"9327:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9312:3:5"},"nodeType":"YulFunctionCall","src":"9312:18:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9259:43:5"},"nodeType":"YulFunctionCall","src":"9259:72:5"},"nodeType":"YulExpressionStatement","src":"9259:72:5"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9385:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9398:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"9409:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9394:3:5"},"nodeType":"YulFunctionCall","src":"9394:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9341:43:5"},"nodeType":"YulFunctionCall","src":"9341:72:5"},"nodeType":"YulExpressionStatement","src":"9341:72:5"}]},"name":"abi_encode_tuple_t_bytes32_t_uint256_t_address_t_uint256__to_t_bytes32_t_uint256_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8997:9:5","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9009:6:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9017:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9025:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9033:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9044:4:5","type":""}],"src":"8867:553:5"},{"body":{"nodeType":"YulBlock","src":"9473:32:5","statements":[{"nodeType":"YulAssignment","src":"9483:16:5","value":{"name":"value","nodeType":"YulIdentifier","src":"9494:5:5"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"9483:7:5"}]}]},"name":"leftAlign_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9455:5:5","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"9465:7:5","type":""}],"src":"9426:79:5"},{"body":{"nodeType":"YulBlock","src":"9594:74:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9611:3:5"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9654:5:5"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"9636:17:5"},"nodeType":"YulFunctionCall","src":"9636:24:5"}],"functionName":{"name":"leftAlign_t_bytes32","nodeType":"YulIdentifier","src":"9616:19:5"},"nodeType":"YulFunctionCall","src":"9616:45:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9604:6:5"},"nodeType":"YulFunctionCall","src":"9604:58:5"},"nodeType":"YulExpressionStatement","src":"9604:58:5"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9582:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9589:3:5","type":""}],"src":"9511:157:5"},{"body":{"nodeType":"YulBlock","src":"9721:32:5","statements":[{"nodeType":"YulAssignment","src":"9731:16:5","value":{"name":"value","nodeType":"YulIdentifier","src":"9742:5:5"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"9731:7:5"}]}]},"name":"leftAlign_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9703:5:5","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"9713:7:5","type":""}],"src":"9674:79:5"},{"body":{"nodeType":"YulBlock","src":"9842:74:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9859:3:5"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9902:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9884:17:5"},"nodeType":"YulFunctionCall","src":"9884:24:5"}],"functionName":{"name":"leftAlign_t_uint256","nodeType":"YulIdentifier","src":"9864:19:5"},"nodeType":"YulFunctionCall","src":"9864:45:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9852:6:5"},"nodeType":"YulFunctionCall","src":"9852:58:5"},"nodeType":"YulExpressionStatement","src":"9852:58:5"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9830:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9837:3:5","type":""}],"src":"9759:157:5"},{"body":{"nodeType":"YulBlock","src":"10066:253:5","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10139:6:5"},{"name":"pos","nodeType":"YulIdentifier","src":"10148:3:5"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10077:61:5"},"nodeType":"YulFunctionCall","src":"10077:75:5"},"nodeType":"YulExpressionStatement","src":"10077:75:5"},{"nodeType":"YulAssignment","src":"10161:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10172:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"10177:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10168:3:5"},"nodeType":"YulFunctionCall","src":"10168:12:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10161:3:5"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10252:6:5"},{"name":"pos","nodeType":"YulIdentifier","src":"10261:3:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10190:61:5"},"nodeType":"YulFunctionCall","src":"10190:75:5"},"nodeType":"YulExpressionStatement","src":"10190:75:5"},{"nodeType":"YulAssignment","src":"10274:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10285:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"10290:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10281:3:5"},"nodeType":"YulFunctionCall","src":"10281:12:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10274:3:5"}]},{"nodeType":"YulAssignment","src":"10303:10:5","value":{"name":"pos","nodeType":"YulIdentifier","src":"10310:3:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10303:3:5"}]}]},"name":"abi_encode_tuple_packed_t_bytes32_t_uint256__to_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10037:3:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10043:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10051:6:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10062:3:5","type":""}],"src":"9922:397:5"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only VRFCoordinator can fulfill\")\n\n    }\n\n    function abi_encode_t_stringliteral_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aa31d97d949424087cac59e348924584a13a8784d3590fa798a0967391035445_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_4bb3a9958b8c6e95beec57f36a0352593367170b4a84072c44b036bee3a36e74(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough LINK - fill contract \")\n\n        mstore(add(memPtr, 32), \"with faucet\")\n\n    }\n\n    function abi_encode_t_stringliteral_4bb3a9958b8c6e95beec57f36a0352593367170b4a84072c44b036bee3a36e74_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_4bb3a9958b8c6e95beec57f36a0352593367170b4a84072c44b036bee3a36e74(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4bb3a9958b8c6e95beec57f36a0352593367170b4a84072c44b036bee3a36e74__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4bb3a9958b8c6e95beec57f36a0352593367170b4a84072c44b036bee3a36e74_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint256_t_address_t_uint256__to_t_bytes32_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes32_t_uint256__to_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n}\n","id":5,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"168":[{"length":32,"start":327},{"length":32,"start":589}],"170":[{"length":32,"start":166},{"length":32,"start":649}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806342619f661461004657806394985ddd14610064578063dbdff2c114610080575b600080fd5b61004e61009e565b60405161005b9190610421565b60405180910390f35b61007e600480360381019061007991906104a3565b6100a4565b005b610088610140565b60405161009591906104f2565b60405180910390f35b60035481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610132576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101299061056a565b60405180910390fd5b61013c8282610232565b5050565b60006002547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161019e91906105cb565b602060405180830381865afa1580156101bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101df91906105fb565b1161021f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102169061069a565b60405180910390fd5b61022d600154600254610249565b905090565b600a8161023f91906106e9565b6003819055505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634000aea07f0000000000000000000000000000000000000000000000000000000000000000848660006040516020016102bd92919061071a565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016102ea939291906107d3565b6020604051808303816000875af1158015610309573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032d9190610849565b50600061034f8460003060008089815260200190815260200160002054610399565b905060016000808681526020019081526020016000205461037091906108a5565b6000808681526020019081526020016000208190555061039084826103d5565b91505092915050565b6000848484846040516020016103b294939291906108d9565b6040516020818303038152906040528051906020012060001c9050949350505050565b600082826040516020016103ea929190610960565b60405160208183030381529060405280519060200120905092915050565b6000819050919050565b61041b81610408565b82525050565b60006020820190506104366000830184610412565b92915050565b600080fd5b6000819050919050565b61045481610441565b811461045f57600080fd5b50565b6000813590506104718161044b565b92915050565b61048081610408565b811461048b57600080fd5b50565b60008135905061049d81610477565b92915050565b600080604083850312156104ba576104b961043c565b5b60006104c885828601610462565b92505060206104d98582860161048e565b9150509250929050565b6104ec81610441565b82525050565b600060208201905061050760008301846104e3565b92915050565b600082825260208201905092915050565b7f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00600082015250565b6000610554601f8361050d565b915061055f8261051e565b602082019050919050565b6000602082019050818103600083015261058381610547565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105b58261058a565b9050919050565b6105c5816105aa565b82525050565b60006020820190506105e060008301846105bc565b92915050565b6000815190506105f581610477565b92915050565b6000602082840312156106115761061061043c565b5b600061061f848285016105e6565b91505092915050565b7f4e6f7420656e6f756768204c494e4b202d2066696c6c20636f6e74726163742060008201527f7769746820666175636574000000000000000000000000000000000000000000602082015250565b6000610684602b8361050d565b915061068f82610628565b604082019050919050565b600060208201905081810360008301526106b381610677565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006106f482610408565b91506106ff83610408565b92508261070f5761070e6106ba565b5b828206905092915050565b600060408201905061072f60008301856104e3565b61073c6020830184610412565b9392505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561077d578082015181840152602081019050610762565b60008484015250505050565b6000601f19601f8301169050919050565b60006107a582610743565b6107af818561074e565b93506107bf81856020860161075f565b6107c881610789565b840191505092915050565b60006060820190506107e860008301866105bc565b6107f56020830185610412565b8181036040830152610807818461079a565b9050949350505050565b60008115159050919050565b61082681610811565b811461083157600080fd5b50565b6000815190506108438161081d565b92915050565b60006020828403121561085f5761085e61043c565b5b600061086d84828501610834565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108b082610408565b91506108bb83610408565b92508282019050808211156108d3576108d2610876565b5b92915050565b60006080820190506108ee60008301876104e3565b6108fb6020830186610412565b61090860408301856105bc565b6109156060830184610412565b95945050505050565b6000819050919050565b61093961093482610441565b61091e565b82525050565b6000819050919050565b61095a61095582610408565b61093f565b82525050565b600061096c8285610928565b60208201915061097c8284610949565b602082019150819050939250505056fea264697066735822122081668e82831e2ae1018e1411989411cc75b366f2ca53977f0b277f07a5c42a0964736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42619F66 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xDBDFF2C1 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0xA4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x88 PUSH2 0x140 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x132 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129 SWAP1 PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13C DUP3 DUP3 PUSH2 0x232 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x5FB JUMP JUMPDEST GT PUSH2 0x21F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x216 SWAP1 PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22D PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH2 0x249 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA DUP2 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2BD SWAP3 SWAP2 SWAP1 PUSH2 0x71A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7D3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x309 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x849 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x34F DUP5 PUSH1 0x0 ADDRESS PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x399 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x390 DUP5 DUP3 PUSH2 0x3D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3B2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3EA SWAP3 SWAP2 SWAP1 PUSH2 0x960 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x41B DUP2 PUSH2 0x408 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x436 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x412 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x454 DUP2 PUSH2 0x441 JUMP JUMPDEST DUP2 EQ PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x471 DUP2 PUSH2 0x44B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x480 DUP2 PUSH2 0x408 JUMP JUMPDEST DUP2 EQ PUSH2 0x48B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x49D DUP2 PUSH2 0x477 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4BA JUMPI PUSH2 0x4B9 PUSH2 0x43C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C8 DUP6 DUP3 DUP7 ADD PUSH2 0x462 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4D9 DUP6 DUP3 DUP7 ADD PUSH2 0x48E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x4EC DUP2 PUSH2 0x441 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x507 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x554 PUSH1 0x1F DUP4 PUSH2 0x50D JUMP JUMPDEST SWAP2 POP PUSH2 0x55F DUP3 PUSH2 0x51E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x583 DUP2 PUSH2 0x547 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B5 DUP3 PUSH2 0x58A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5C5 DUP2 PUSH2 0x5AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5E0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5F5 DUP2 PUSH2 0x477 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x611 JUMPI PUSH2 0x610 PUSH2 0x43C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x61F DUP5 DUP3 DUP6 ADD PUSH2 0x5E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F756768204C494E4B202D2066696C6C20636F6E747261637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7769746820666175636574000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x684 PUSH1 0x2B DUP4 PUSH2 0x50D JUMP JUMPDEST SWAP2 POP PUSH2 0x68F DUP3 PUSH2 0x628 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6B3 DUP2 PUSH2 0x677 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6F4 DUP3 PUSH2 0x408 JUMP JUMPDEST SWAP2 POP PUSH2 0x6FF DUP4 PUSH2 0x408 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x70F JUMPI PUSH2 0x70E PUSH2 0x6BA JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x72F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0x73C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x412 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x77D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x762 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A5 DUP3 PUSH2 0x743 JUMP JUMPDEST PUSH2 0x7AF DUP2 DUP6 PUSH2 0x74E JUMP JUMPDEST SWAP4 POP PUSH2 0x7BF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x75F JUMP JUMPDEST PUSH2 0x7C8 DUP2 PUSH2 0x789 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x7E8 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x5BC JUMP JUMPDEST PUSH2 0x7F5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x412 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x807 DUP2 DUP5 PUSH2 0x79A JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x826 DUP2 PUSH2 0x811 JUMP JUMPDEST DUP2 EQ PUSH2 0x831 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x843 DUP2 PUSH2 0x81D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x85F JUMPI PUSH2 0x85E PUSH2 0x43C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x86D DUP5 DUP3 DUP6 ADD PUSH2 0x834 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8B0 DUP3 PUSH2 0x408 JUMP JUMPDEST SWAP2 POP PUSH2 0x8BB DUP4 PUSH2 0x408 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x8D3 JUMPI PUSH2 0x8D2 PUSH2 0x876 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x8EE PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0x8FB PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x412 JUMP JUMPDEST PUSH2 0x908 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x5BC JUMP JUMPDEST PUSH2 0x915 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x412 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x939 PUSH2 0x934 DUP3 PUSH2 0x441 JUMP JUMPDEST PUSH2 0x91E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x95A PUSH2 0x955 DUP3 PUSH2 0x408 JUMP JUMPDEST PUSH2 0x93F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x96C DUP3 DUP6 PUSH2 0x928 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x97C DUP3 DUP5 PUSH2 0x949 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 PUSH7 0x8E82831E2AE101 DUP15 EQ GT SWAP9 SWAP5 GT 0xCC PUSH22 0xB366F2CA53977F0B277F07A5C42A0964736F6C634300 ADDMOD GT STOP CALLER ","sourceMap":"90:1335:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;198:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9565:207:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1003:218:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;198:27;;;;:::o;9565:207:1:-;9671:14;9657:28;;:10;:28;;;9649:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;9727:40;9745:9;9756:10;9727:17;:40::i;:::-;9565:207;;:::o;1003:218:4:-;1046:17;1115:3;;1083:4;:14;;;1106:4;1083:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;1075:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;1183:31;1201:7;;1210:3;;1183:17;:31::i;:::-;1176:38;;1003:218;:::o;1292:131::-;1413:2;1402:10;:13;;;;:::i;:::-;1386:12;:30;;;;1292:131;;:::o;7721:1020:1:-;7798:17;7823:4;:20;;;7844:14;7860:4;7877:8;6578:1;7866:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7823:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8141:15;8159:82;8176:8;6578:1;8217:4;8224:6;:16;8231:8;8224:16;;;;;;;;;;;;8159;:82::i;:::-;8141:100;;8690:1;8671:6;:16;8678:8;8671:16;;;;;;;;;;;;:20;;;;:::i;:::-;8652:6;:16;8659:8;8652:16;;;;;;;;;;;:39;;;;8704:32;8718:8;8728:7;8704:13;:32::i;:::-;8697:39;;;7721:1020;;;;:::o;796:240:3:-;938:7;989:8;999:9;1010:10;1022:6;978:51;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;968:62;;;;;;960:71;;953:78;;796:240;;;;;;:::o;1416:166::-;1503:7;1552:8;1562:13;1535:41;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1525:52;;;;;;1518:59;;1416:166;;;;:::o;7:77:5:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:77;806:7;835:5;824:16;;769:77;;;:::o;852:122::-;925:24;943:5;925:24;:::i;:::-;918:5;915:35;905:63;;964:1;961;954:12;905:63;852:122;:::o;980:139::-;1026:5;1064:6;1051:20;1042:29;;1080:33;1107:5;1080:33;:::i;:::-;980:139;;;;:::o;1125:122::-;1198:24;1216:5;1198:24;:::i;:::-;1191:5;1188:35;1178:63;;1237:1;1234;1227:12;1178:63;1125:122;:::o;1253:139::-;1299:5;1337:6;1324:20;1315:29;;1353:33;1380:5;1353:33;:::i;:::-;1253:139;;;;:::o;1398:474::-;1466:6;1474;1523:2;1511:9;1502:7;1498:23;1494:32;1491:119;;;1529:79;;:::i;:::-;1491:119;1649:1;1674:53;1719:7;1710:6;1699:9;1695:22;1674:53;:::i;:::-;1664:63;;1620:117;1776:2;1802:53;1847:7;1838:6;1827:9;1823:22;1802:53;:::i;:::-;1792:63;;1747:118;1398:474;;;;;:::o;1878:118::-;1965:24;1983:5;1965:24;:::i;:::-;1960:3;1953:37;1878:118;;:::o;2002:222::-;2095:4;2133:2;2122:9;2118:18;2110:26;;2146:71;2214:1;2203:9;2199:17;2190:6;2146:71;:::i;:::-;2002:222;;;;:::o;2230:169::-;2314:11;2348:6;2343:3;2336:19;2388:4;2383:3;2379:14;2364:29;;2230:169;;;;:::o;2405:181::-;2545:33;2541:1;2533:6;2529:14;2522:57;2405:181;:::o;2592:366::-;2734:3;2755:67;2819:2;2814:3;2755:67;:::i;:::-;2748:74;;2831:93;2920:3;2831:93;:::i;:::-;2949:2;2944:3;2940:12;2933:19;;2592:366;;;:::o;2964:419::-;3130:4;3168:2;3157:9;3153:18;3145:26;;3217:9;3211:4;3207:20;3203:1;3192:9;3188:17;3181:47;3245:131;3371:4;3245:131;:::i;:::-;3237:139;;2964:419;;;:::o;3389:126::-;3426:7;3466:42;3459:5;3455:54;3444:65;;3389:126;;;:::o;3521:96::-;3558:7;3587:24;3605:5;3587:24;:::i;:::-;3576:35;;3521:96;;;:::o;3623:118::-;3710:24;3728:5;3710:24;:::i;:::-;3705:3;3698:37;3623:118;;:::o;3747:222::-;3840:4;3878:2;3867:9;3863:18;3855:26;;3891:71;3959:1;3948:9;3944:17;3935:6;3891:71;:::i;:::-;3747:222;;;;:::o;3975:143::-;4032:5;4063:6;4057:13;4048:22;;4079:33;4106:5;4079:33;:::i;:::-;3975:143;;;;:::o;4124:351::-;4194:6;4243:2;4231:9;4222:7;4218:23;4214:32;4211:119;;;4249:79;;:::i;:::-;4211:119;4369:1;4394:64;4450:7;4441:6;4430:9;4426:22;4394:64;:::i;:::-;4384:74;;4340:128;4124:351;;;;:::o;4481:230::-;4621:34;4617:1;4609:6;4605:14;4598:58;4690:13;4685:2;4677:6;4673:15;4666:38;4481:230;:::o;4717:366::-;4859:3;4880:67;4944:2;4939:3;4880:67;:::i;:::-;4873:74;;4956:93;5045:3;4956:93;:::i;:::-;5074:2;5069:3;5065:12;5058:19;;4717:366;;;:::o;5089:419::-;5255:4;5293:2;5282:9;5278:18;5270:26;;5342:9;5336:4;5332:20;5328:1;5317:9;5313:17;5306:47;5370:131;5496:4;5370:131;:::i;:::-;5362:139;;5089:419;;;:::o;5514:180::-;5562:77;5559:1;5552:88;5659:4;5656:1;5649:15;5683:4;5680:1;5673:15;5700:176;5732:1;5749:20;5767:1;5749:20;:::i;:::-;5744:25;;5783:20;5801:1;5783:20;:::i;:::-;5778:25;;5822:1;5812:35;;5827:18;;:::i;:::-;5812:35;5868:1;5865;5861:9;5856:14;;5700:176;;;;:::o;5882:332::-;6003:4;6041:2;6030:9;6026:18;6018:26;;6054:71;6122:1;6111:9;6107:17;6098:6;6054:71;:::i;:::-;6135:72;6203:2;6192:9;6188:18;6179:6;6135:72;:::i;:::-;5882:332;;;;;:::o;6220:98::-;6271:6;6305:5;6299:12;6289:22;;6220:98;;;:::o;6324:168::-;6407:11;6441:6;6436:3;6429:19;6481:4;6476:3;6472:14;6457:29;;6324:168;;;;:::o;6498:246::-;6579:1;6589:113;6603:6;6600:1;6597:13;6589:113;;;6688:1;6683:3;6679:11;6673:18;6669:1;6664:3;6660:11;6653:39;6625:2;6622:1;6618:10;6613:15;;6589:113;;;6736:1;6727:6;6722:3;6718:16;6711:27;6560:184;6498:246;;;:::o;6750:102::-;6791:6;6842:2;6838:7;6833:2;6826:5;6822:14;6818:28;6808:38;;6750:102;;;:::o;6858:373::-;6944:3;6972:38;7004:5;6972:38;:::i;:::-;7026:70;7089:6;7084:3;7026:70;:::i;:::-;7019:77;;7105:65;7163:6;7158:3;7151:4;7144:5;7140:16;7105:65;:::i;:::-;7195:29;7217:6;7195:29;:::i;:::-;7190:3;7186:39;7179:46;;6948:283;6858:373;;;;:::o;7237:529::-;7404:4;7442:2;7431:9;7427:18;7419:26;;7455:71;7523:1;7512:9;7508:17;7499:6;7455:71;:::i;:::-;7536:72;7604:2;7593:9;7589:18;7580:6;7536:72;:::i;:::-;7655:9;7649:4;7645:20;7640:2;7629:9;7625:18;7618:48;7683:76;7754:4;7745:6;7683:76;:::i;:::-;7675:84;;7237:529;;;;;;:::o;7772:90::-;7806:7;7849:5;7842:13;7835:21;7824:32;;7772:90;;;:::o;7868:116::-;7938:21;7953:5;7938:21;:::i;:::-;7931:5;7928:32;7918:60;;7974:1;7971;7964:12;7918:60;7868:116;:::o;7990:137::-;8044:5;8075:6;8069:13;8060:22;;8091:30;8115:5;8091:30;:::i;:::-;7990:137;;;;:::o;8133:345::-;8200:6;8249:2;8237:9;8228:7;8224:23;8220:32;8217:119;;;8255:79;;:::i;:::-;8217:119;8375:1;8400:61;8453:7;8444:6;8433:9;8429:22;8400:61;:::i;:::-;8390:71;;8346:125;8133:345;;;;:::o;8484:180::-;8532:77;8529:1;8522:88;8629:4;8626:1;8619:15;8653:4;8650:1;8643:15;8670:191;8710:3;8729:20;8747:1;8729:20;:::i;:::-;8724:25;;8763:20;8781:1;8763:20;:::i;:::-;8758:25;;8806:1;8803;8799:9;8792:16;;8827:3;8824:1;8821:10;8818:36;;;8834:18;;:::i;:::-;8818:36;8670:191;;;;:::o;8867:553::-;9044:4;9082:3;9071:9;9067:19;9059:27;;9096:71;9164:1;9153:9;9149:17;9140:6;9096:71;:::i;:::-;9177:72;9245:2;9234:9;9230:18;9221:6;9177:72;:::i;:::-;9259;9327:2;9316:9;9312:18;9303:6;9259:72;:::i;:::-;9341;9409:2;9398:9;9394:18;9385:6;9341:72;:::i;:::-;8867:553;;;;;;;:::o;9426:79::-;9465:7;9494:5;9483:16;;9426:79;;;:::o;9511:157::-;9616:45;9636:24;9654:5;9636:24;:::i;:::-;9616:45;:::i;:::-;9611:3;9604:58;9511:157;;:::o;9674:79::-;9713:7;9742:5;9731:16;;9674:79;;;:::o;9759:157::-;9864:45;9884:24;9902:5;9884:24;:::i;:::-;9864:45;:::i;:::-;9859:3;9852:58;9759:157;;:::o;9922:397::-;10062:3;10077:75;10148:3;10139:6;10077:75;:::i;:::-;10177:2;10172:3;10168:12;10161:19;;10190:75;10261:3;10252:6;10190:75;:::i;:::-;10290:2;10285:3;10281:12;10274:19;;10310:3;10303:10;;9922:397;;;;;:::o"},"methodIdentifiers":{"getRandomNumber()":"dbdff2c1","randomResult()":"42619f66","rawFulfillRandomness(bytes32,uint256)":"94985ddd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getRandomNumber\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomResult\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"randomness\",\"type\":\"uint256\"}],\"name\":\"rawFulfillRandomness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor inherits VRFConsumerBase  Network: Polygon (Matic) Mumbai Testnet Chainlink VRF Coordinator address: 0x8C7382F9D8f56b33781fE506E897a4F1e2d17255 LINK token address:                0x326C977E6efc84E512bB9C30f76E30c160eD06FB Key Hash: 0x6e75b569a01ef56d18cab6a8e71e6600d6ce853834d4a5748b720d06f878b3a4\"},\"getRandomNumber()\":{\"notice\":\"Requests randomness \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/randomness.sol\":\"RandomNumber\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LinkTokenInterface.sol\":{\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cb1064885ecbcd9c3adba779e190cb4a538e5d4d15aeccb67d3376bdffc94bd\",\"dweb:/ipfs/QmcQHK6ewve7tFi4XXK65JthQg4kQzApQikWcURJjGt4iQ\"]},\"contracts/VRFConsumerBase.sol\":{\"keccak256\":\"0xcf89cc5e66d7e77b5583924226888a8ad0699a295210316a8cc2b110eb8e4b5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9aa5d569f018786a3a2858bb4b955e6e4e3bd209d8bd9e8fe56391ebffc1842\",\"dweb:/ipfs/QmWGbQ25qWXnxwDr9XDW9AM1VQ5fYNL7TP3RSfidKGuYfT\"]},\"contracts/VRFRequestIDBase.sol\":{\"keccak256\":\"0x2bf1168e8fe548fa990e0aeaf89ef90680f80aa31eeaf901f485df60de51d51b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79c72d66deaa4b0f251f3f0817f45ebceb71f5b4f94a86ac0e586de99f5af2b6\",\"dweb:/ipfs/QmcHkApHm5CAynjajcCUYppaKJ9sNWGZTEcSs4tUK8B5K5\"]},\"contracts/randomness.sol\":{\"keccak256\":\"0xd66c8dd37acf56ba47d27d667d8abc217483886bc4ce8516a6390fa3ddc88651\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6abe00051d83e6313d1d27a818bf353a228ad831e7cb6df38619b23e0515eefe\",\"dweb:/ipfs/QmUkx13PcvsYCEhqNZ9wnyEqsXp8mr7VE4pwr5WMrkWjzn\"]}},\"version\":1}"}}}}}